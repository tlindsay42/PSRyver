{
    "docs": [
        {
            "location": "/",
            "text": "PSRyver\n\u00b6\n\n\n\n\nThis is a quick and dirty community module to interact with the Ryver API.\n\n\nPull requests and other contributions would be welcome!\n\n\nPrerequisites\n\u00b6\n\n\n\n\nPowerShell 3 or later\n\n\nValid credentials or an incoming webhook URI from Ryver.\n\n\nAdd an incoming webhook to your team, grab the URI\n\n\n\n\n\n\n\n\nGetting Started\n\u00b6\n\n\n\n\nInstallation\n\n\nPowerShell 3 & 4\n\n\nDownload the repository\n\n\nUnblock the zip\n\n\nExtract the PSRyver folder to a module path in \n$Env:PSModulePath\n\n\nExample: \n\"$Env:USERPROFILE\\Documents\\WindowsPowerShell\\Modules\\\"\n\n\n\n\n\n\n\n\n\n\nPowerShell 5+\n    \nInstall-Module\n \n-Name\n \n'PSRyver'\n\n\nImport-Module\n \n-Name\n \n'PSRyver'\n\n\n\n\n\n\n\n\nList the commands in the module\n    \nGet-Command\n \n-Module\n \n'PSRyver'\n\n\n\n\nGet help\n    \nGet-Help\n \n-Name\n \n'Send-RyverMessage'\n \n-Full\n\n\nGet-Help\n \n-Name\n \n'about_PSRyver'\n\n\n\n\n\n\nExamples\n\u00b6\n\n\nSend a Simple Ryver Message\n\u00b6\n\n\n\n\nThis example shows a crudely crafted message without any attachments, using parameters from \nSend-RyverMessage\n to construct the message.\n  NOTE: This assumes that an incoming webhook URI was setup at \n\"https://${yourTeam}.ryver.com/\"\n\n\nSend a direct message to @tlindsay42 (not a channel), parsing the text to linkify usernames and channels\n    \n$splat\n \n=\n \n@{\n\n    \nURI\n     \n=\n \n'Some incoming webhook URI from Ryver'\n\n    \nChannel\n \n=\n \n'@tlindsay42'\n\n    \nParse\n   \n=\n \n'full'\n\n    \nText\n    \n=\n \n'Hello @tlindsay42, join me in #devnull!'\n\n\n}\n\n\nSend-RyverMessage\n \n@splat\n\n\n\n\n\n\n\n\n\nSearch for a Ryver Message\n\u00b6\n\n\n\n\nSearch for a message containing PowerShell, sorting results by timestamp.\n    \n$splat\n \n=\n \n@{\n\n    \nURI\n    \n=\n \n'Some incoming webhook URI from Ryver'\n\n    \nQuery\n  \n=\n \n'PowerShell'\n\n    \nSortBy\n \n=\n \n'timestamp'\n\n\n}\n\n\nFind-RyverMessage\n \n@splat\n\n\n\n\n\n\n\n\n\n\n\nSearch for a message containing PowerShell\n\n\nResults are sorted by best match by default\n\n\nNotice the extra properties and previous/next messages\n    \n$splat\n \n=\n \n@{\n\n    \nToken\n    \n=\n \n$Token\n\n    \nQuery\n    \n=\n \n'PowerShell'\n\n    \nProperty\n \n=\n \n'*'\n\n\n}\n\n\nFind-RyverMessage\n \n@splat\n \n|\n\n    \nSelect-Object\n \n-Property\n \n'*'\n\n\n\n\n\n\n\n\n\nYou could use this simply to search Ryver from the CLI, or in an automated solution that might avoid posting if certain content is already found in Ryver.\n\n\nSend a Richer Ryver Message\n\u00b6\n\n\n\n\nThis is a simple example illustrating some common options when constructing a message attachment giving you a richer message\n    \n$splat\n \n=\n \n@{\n\n    \nColor\n      \n=\n \n[System.Drawing.Color]\n::\nRed\n\n    \nTitle\n      \n=\n \n'The System Is Down'\n\n    \nTitleLink\n  \n=\n \n'https://www.youtube.com/watch?v=TmpRs7xN06Q'\n\n    \nText\n       \n=\n \n'Please Do The Needful'\n\n    \nPretext\n    \n=\n \n'Everything is broken'\n\n    \nAuthorName\n \n=\n \n'SCOM Bot'\n\n    \nAuthorIcon\n \n=\n \n'https://tlindsay42.github.io/PSRyver/img/wrench.png'\n\n    \nFallback\n   \n=\n \n'Your client is bad'\n\n\n}\n\n\nNew-RyverMessageAttachment\n \n@splat\n \n|\n\n    \nNew-RyverMessage\n \n-Channel\n \n'@tlindsay42'\n \n-IconEmoji\n \n':bomb:'\n \n|\n\n    \nSend-RyverMessage\n \n-URI\n \n'Some incoming webhook URI from Ryver'\n\n\n\n\n\n\n\n\n\nNotice that the title is clickable.  You might link to:\n\n\n\n\nThe alert in question\n\n\nA logging solution query\n\n\nA dashboard\n\n\nSome other contextual link\n\n\nStrongbad\n\n\n\n\nSend Multiple Ryver Attachments\n\u00b6\n\n\n\n\nThis example demonstrates that you can chain new attachments together to form a multi-attachment message.\n\n\n\n\n$attachment1\n \n=\n \n@{\n\n    \nColor\n     \n=\n \n$Script:PSRyverColorMap\n.\nRed\n\n    \nTitle\n     \n=\n \n'The System Is Down'\n\n    \nTitleLink\n \n=\n \n'https://www.youtube.com/watch?v=TmpRs7xN06Q'\n\n    \nText\n      \n=\n \n'Everybody panic!'\n\n    \nPretext\n   \n=\n \n'Everything is broken'\n\n    \nFallback\n  \n=\n \n'Your client is bad'\n\n\n}\n\n\n$attachment2\n \n=\n \n@{\n\n    \nColor\n     \n=\n \n[System.Drawing.Color]\n::\nOrange\n\n    \nTitle\n     \n=\n \n'The Other System Is Down'\n\n    \nTitleLink\n \n=\n \n'https://www.youtube.com/watch?v=TmpRs7xN06Q'\n\n    \nText\n      \n=\n \n'Please Do The Needful'\n\n    \nFallback\n  \n=\n \n'Your client is bad'\n\n\n}\n\n\nNew-RyverMessageAttachment\n \n@attachment1\n \n|\n\n    \nNew-RyverMessageAttachment\n \n@attachment2\n \n|\n\n    \nNew-RyverMessage\n \n-Channel\n \n'@tlindsay42'\n \n-IconEmoji\n \n':bomb:'\n \n-AsUser\n \n-Username\n \n'SCOM Bot'\n \n|\n\n    \nSend-RyverMessage\n \n-URI\n \n'Some incoming webhook URI from Ryver'\n\n\n\n\n\n\n\n\nNotice that we can chain multiple \nNew-RyverMessageAttachment\ns together.\n\n\nSend a Table of Key Value Pairs\n\u00b6\n\n\n\n\nThis example illustrates a pattern where you might want to send output from a script; you might include errors, successful items, or other output.\n\n\n\n\nPretend we're in a script, and caught an exception of some sort\n    \n$fail\n \n=\n \n[PSCustomObject]\n \n@{\n\n    \nSAMAccountName\n \n=\n \n'bob'\n\n    \nOperation\n      \n=\n \n'Remove privileges'\n\n    \nStatus\n         \n=\n \n\"An error message\"\n\n    \nTimestamp\n      \n=\n \n(\n \nGet-Date\n \n).\nToString\n()\n\n\n}\n\n\n\n# Create an array from the properties in our fail object\n\n\n$fields\n \n=\n \n@()\n\n\nforeach\n(\n \n$property\n \nin\n \n$fail\n.\nPSObject\n.\nProperties\n.\nName\n)\n\n\n{\n\n    \n$fields\n \n+=\n \n@{\n\n        \nTitle\n \n=\n \n$property\n\n        \nValue\n \n=\n \n$fail\n.\n$property\n\n        \nShort\n \n=\n \n$true\n\n    \n}\n\n\n}\n\n\n\n# Construct and send the message!\n\n\n$splat\n \n=\n \n@{\n\n    \nColor\n    \n=\n \n[System.Drawing.Color]\n::\nOrange\n\n    \nTitle\n    \n=\n \n'Failed to process account'\n\n    \nFields\n   \n=\n \n$Fields\n\n    \nFallback\n \n=\n \n'Your client is bad'\n\n\n}\n\n\nNew-RyverMessageAttachment\n \n@splat\n \n|\n\n    \nNew-RyverMessage\n \n-Channel\n \n'devnull'\n \n|\n\n    \nSend-RyverMessage\n \n-URI\n \n'Some incoming webhook URI from Ryver'\n\n\n\n\n\n\n\n\nWe build up a pretend error object, and send each property to a \nfields\n array\n\n\n\n\nCreates an attachment with the fields from our error\n\n\nCreates a message from that attachment and send it with an incoming webhook URI\n\n\n\n\n\n\n\nStore and Retrieve Configs\n\u00b6\n\n\n\n\nTo save time and typing, you can save your credentials or incoming webhook URI to a config file (protected via DPAPI) and a module variable.\n\n\nThis is used as the default for commands, and is reloaded if you open a new PowerShell session.\n\n\n\n\nIncoming Webhook URI\n\u00b6\n\n\nSet-PSRyverConfig\n \n-URI\n \n'SomeRyverUri'\n\n\n\n# Read the current cofig\n\n\nGet-PSRyverConfig\n\n\n\n\n\nCredentials\n\u00b6\n\n\nSet-PSRyverConfig\n \n-Credential\n \n(\n \nGet-Credential\n \n)\n\n\n\n# Read the current cofig\n\n\nGet-PSRyverConfig\n\n\n\n\n\nNotes\n\u00b6\n\n\nThis project was forked with \n from v0.1.0 of \nWarren Frame's\n awesome \nPSSlack project\n.  Thanks Warren!\n\n\nCurrently evaluating .NET Core / Cross-platform functionality.  The following will not work initially:\n\n\n\n\nSerialization of URIs via \nSet-PSRyverConfig\n.  Set these values per-session if needed.\n\n\n[System.Drawing.Color]::SomeColor\n shortcut.  Use the provided \n$Script:PSRyverColorMap\n hash to simplify this.\n\n\nExample: \n$Script:PSRyverColorMap.Red\n\n\n\n\n\n\n\n\nIf you want to go beyond interacting with the Ryver API, you might consider \nusing a bot\n.",
            "title": "Home"
        },
        {
            "location": "/#psryver",
            "text": "This is a quick and dirty community module to interact with the Ryver API.  Pull requests and other contributions would be welcome!",
            "title": "PSRyver"
        },
        {
            "location": "/#prerequisites",
            "text": "PowerShell 3 or later  Valid credentials or an incoming webhook URI from Ryver.  Add an incoming webhook to your team, grab the URI",
            "title": "Prerequisites"
        },
        {
            "location": "/#getting-started",
            "text": "Installation  PowerShell 3 & 4  Download the repository  Unblock the zip  Extract the PSRyver folder to a module path in  $Env:PSModulePath  Example:  \"$Env:USERPROFILE\\Documents\\WindowsPowerShell\\Modules\\\"      PowerShell 5+\n     Install-Module   -Name   'PSRyver'  Import-Module   -Name   'PSRyver'     List the commands in the module\n     Get-Command   -Module   'PSRyver'   Get help\n     Get-Help   -Name   'Send-RyverMessage'   -Full  Get-Help   -Name   'about_PSRyver'",
            "title": "Getting Started"
        },
        {
            "location": "/#examples",
            "text": "",
            "title": "Examples"
        },
        {
            "location": "/#send-a-simple-ryver-message",
            "text": "This example shows a crudely crafted message without any attachments, using parameters from  Send-RyverMessage  to construct the message.\n  NOTE: This assumes that an incoming webhook URI was setup at  \"https://${yourTeam}.ryver.com/\"  Send a direct message to @tlindsay42 (not a channel), parsing the text to linkify usernames and channels\n     $splat   =   @{ \n     URI       =   'Some incoming webhook URI from Ryver' \n     Channel   =   '@tlindsay42' \n     Parse     =   'full' \n     Text      =   'Hello @tlindsay42, join me in #devnull!'  }  Send-RyverMessage   @splat",
            "title": "Send a Simple Ryver Message"
        },
        {
            "location": "/#search-for-a-ryver-message",
            "text": "Search for a message containing PowerShell, sorting results by timestamp.\n     $splat   =   @{ \n     URI      =   'Some incoming webhook URI from Ryver' \n     Query    =   'PowerShell' \n     SortBy   =   'timestamp'  }  Find-RyverMessage   @splat      Search for a message containing PowerShell  Results are sorted by best match by default  Notice the extra properties and previous/next messages\n     $splat   =   @{ \n     Token      =   $Token \n     Query      =   'PowerShell' \n     Property   =   '*'  }  Find-RyverMessage   @splat   | \n     Select-Object   -Property   '*'     You could use this simply to search Ryver from the CLI, or in an automated solution that might avoid posting if certain content is already found in Ryver.",
            "title": "Search for a Ryver Message"
        },
        {
            "location": "/#send-a-richer-ryver-message",
            "text": "This is a simple example illustrating some common options when constructing a message attachment giving you a richer message\n     $splat   =   @{ \n     Color        =   [System.Drawing.Color] :: Red \n     Title        =   'The System Is Down' \n     TitleLink    =   'https://www.youtube.com/watch?v=TmpRs7xN06Q' \n     Text         =   'Please Do The Needful' \n     Pretext      =   'Everything is broken' \n     AuthorName   =   'SCOM Bot' \n     AuthorIcon   =   'https://tlindsay42.github.io/PSRyver/img/wrench.png' \n     Fallback     =   'Your client is bad'  }  New-RyverMessageAttachment   @splat   | \n     New-RyverMessage   -Channel   '@tlindsay42'   -IconEmoji   ':bomb:'   | \n     Send-RyverMessage   -URI   'Some incoming webhook URI from Ryver'     Notice that the title is clickable.  You might link to:   The alert in question  A logging solution query  A dashboard  Some other contextual link  Strongbad",
            "title": "Send a Richer Ryver Message"
        },
        {
            "location": "/#send-multiple-ryver-attachments",
            "text": "This example demonstrates that you can chain new attachments together to form a multi-attachment message.   $attachment1   =   @{ \n     Color       =   $Script:PSRyverColorMap . Red \n     Title       =   'The System Is Down' \n     TitleLink   =   'https://www.youtube.com/watch?v=TmpRs7xN06Q' \n     Text        =   'Everybody panic!' \n     Pretext     =   'Everything is broken' \n     Fallback    =   'Your client is bad'  }  $attachment2   =   @{ \n     Color       =   [System.Drawing.Color] :: Orange \n     Title       =   'The Other System Is Down' \n     TitleLink   =   'https://www.youtube.com/watch?v=TmpRs7xN06Q' \n     Text        =   'Please Do The Needful' \n     Fallback    =   'Your client is bad'  }  New-RyverMessageAttachment   @attachment1   | \n     New-RyverMessageAttachment   @attachment2   | \n     New-RyverMessage   -Channel   '@tlindsay42'   -IconEmoji   ':bomb:'   -AsUser   -Username   'SCOM Bot'   | \n     Send-RyverMessage   -URI   'Some incoming webhook URI from Ryver'    Notice that we can chain multiple  New-RyverMessageAttachment s together.",
            "title": "Send Multiple Ryver Attachments"
        },
        {
            "location": "/#send-a-table-of-key-value-pairs",
            "text": "This example illustrates a pattern where you might want to send output from a script; you might include errors, successful items, or other output.   Pretend we're in a script, and caught an exception of some sort\n     $fail   =   [PSCustomObject]   @{ \n     SAMAccountName   =   'bob' \n     Operation        =   'Remove privileges' \n     Status           =   \"An error message\" \n     Timestamp        =   (   Get-Date   ). ToString ()  }  # Create an array from the properties in our fail object  $fields   =   @()  foreach (   $property   in   $fail . PSObject . Properties . Name )  { \n     $fields   +=   @{ \n         Title   =   $property \n         Value   =   $fail . $property \n         Short   =   $true \n     }  }  # Construct and send the message!  $splat   =   @{ \n     Color      =   [System.Drawing.Color] :: Orange \n     Title      =   'Failed to process account' \n     Fields     =   $Fields \n     Fallback   =   'Your client is bad'  }  New-RyverMessageAttachment   @splat   | \n     New-RyverMessage   -Channel   'devnull'   | \n     Send-RyverMessage   -URI   'Some incoming webhook URI from Ryver'     We build up a pretend error object, and send each property to a  fields  array   Creates an attachment with the fields from our error  Creates a message from that attachment and send it with an incoming webhook URI",
            "title": "Send a Table of Key Value Pairs"
        },
        {
            "location": "/#store-and-retrieve-configs",
            "text": "To save time and typing, you can save your credentials or incoming webhook URI to a config file (protected via DPAPI) and a module variable.  This is used as the default for commands, and is reloaded if you open a new PowerShell session.",
            "title": "Store and Retrieve Configs"
        },
        {
            "location": "/#incoming-webhook-uri",
            "text": "Set-PSRyverConfig   -URI   'SomeRyverUri'  # Read the current cofig  Get-PSRyverConfig",
            "title": "Incoming Webhook URI"
        },
        {
            "location": "/#credentials",
            "text": "Set-PSRyverConfig   -Credential   (   Get-Credential   )  # Read the current cofig  Get-PSRyverConfig",
            "title": "Credentials"
        },
        {
            "location": "/#notes",
            "text": "This project was forked with   from v0.1.0 of  Warren Frame's  awesome  PSSlack project .  Thanks Warren!  Currently evaluating .NET Core / Cross-platform functionality.  The following will not work initially:   Serialization of URIs via  Set-PSRyverConfig .  Set these values per-session if needed.  [System.Drawing.Color]::SomeColor  shortcut.  Use the provided  $Script:PSRyverColorMap  hash to simplify this.  Example:  $Script:PSRyverColorMap.Red     If you want to go beyond interacting with the Ryver API, you might consider  using a bot .",
            "title": "Notes"
        },
        {
            "location": "/Public/Export-PSRyverConfig/",
            "text": "Export-PSRyverConfig\n\u00b6\n\n\nSYNOPSIS\n\u00b6\n\n\nSave the PSRyver module configuration to file.\n\n\nSYNTAX\n\u00b6\n\n\nExport-PSRyverConfig [[-Path] <FileInfo>] [-WhatIf] [-Confirm] [<CommonParameters>]\n\n\n\n\nDESCRIPTION\n\u00b6\n\n\nSave the PSRyver module configuration to file.\n\n\nEXAMPLES\n\u00b6\n\n\nEXAMPLE 1\n\u00b6\n\n\nExport-PSRyverConfig\n\n\n\n\nSaves the PSRyver module configuration stored in $Script:PSRyver to the default\nfile path stored in $Script:PSRyverConfigFilePath, which can be accessed via\nGet-PSRyverConfigPath and set via Set-PSRyverConfigPath. \nThe default location\nis '~/.psryver.xml'\n\n\nEXAMPLE 2\n\u00b6\n\n\nExport-PSRyverConfig -Path '~/.psryver.xml'\n\n\n\n\nSaves the PSRyver module configuration stored in $Script:PSRyver to the\nspecified path of '~/.psryver.xml'.\n\n\nEXAMPLE 3\n\u00b6\n\n\n'~/.psryver.xml' | Export-PSRyverConfig\n\n\n\n\nSaves the PSRyver module configuration stored in $Script:PSRyver to the\nspecified path of '~/.psryver.xml', which is set via the pipeline.\n\n\nPARAMETERS\n\u00b6\n\n\n-Path\n\u00b6\n\n\nSpecifies the PSRyver config file to export.\n\n\nType\n:\n \nFileInfo\n\n\nParameter Sets\n:\n \n(All)\n\n\nAliases\n:\n\n\n\nRequired\n:\n \nFalse\n\n\nPosition\n:\n \n1\n\n\nDefault value\n:\n \n$Script:PSRyverConfigFilePath\n\n\nAccept pipeline input\n:\n \nTrue (ByPropertyName, ByValue)\n\n\nAccept wildcard characters\n:\n \nFalse\n\n\n\n\n\n-Confirm\n\u00b6\n\n\nPrompts you for confirmation before running the cmdlet.\n\n\nType\n:\n \nSwitchParameter\n\n\nParameter Sets\n:\n \n(All)\n\n\nAliases\n:\n \ncf\n\n\n\nRequired\n:\n \nFalse\n\n\nPosition\n:\n \nNamed\n\n\nDefault value\n:\n \nNone\n\n\nAccept pipeline input\n:\n \nFalse\n\n\nAccept wildcard characters\n:\n \nFalse\n\n\n\n\n\n-WhatIf\n\u00b6\n\n\nShows what would happen if the cmdlet runs.\nThe cmdlet is not run.\n\n\nType\n:\n \nSwitchParameter\n\n\nParameter Sets\n:\n \n(All)\n\n\nAliases\n:\n \nwi\n\n\n\nRequired\n:\n \nFalse\n\n\nPosition\n:\n \nNamed\n\n\nDefault value\n:\n \nNone\n\n\nAccept pipeline input\n:\n \nFalse\n\n\nAccept wildcard characters\n:\n \nFalse\n\n\n\n\n\nCommonParameters\n\u00b6\n\n\nThis cmdlet supports the common parameters: -Debug, -ErrorAction, -ErrorVariable, -InformationAction, -InformationVariable, -OutVariable, -OutBuffer, -PipelineVariable, -Verbose, -WarningAction, and -WarningVariable.\nFor more information, see about_CommonParameters (\nhttp://go.microsoft.com/fwlink/?LinkID=113216\n).\n\n\nINPUTS\n\u00b6\n\n\nSystem.IO.FileInfo\n\u00b6\n\n\nOUTPUTS\n\u00b6\n\n\nSystem.Void\n\u00b6\n\n\nNOTES\n\u00b6\n\n\n\n\nTroy Lindsay\n\n\nTwitter: @troylindsay42\n\n\nGitHub: tlindsay42\n\n\n\n\nRELATED LINKS\n\u00b6\n\n\nhttps://tlindsay42.github.io/PSRyver/Public/Export-PSRyverConfig/\n\n\nhttps://github.com/PSRyver/blob/master/PSRyver/Public/Export-PSRyverConfig.ps1\n\n\nImport-PSRyverConfig\n\n\nRead-PSRyverConfig\n\n\nGet-PSRyverConfig\n\n\nSet-PSRyverConfig\n\n\nGet-PSRyverConfigPath\n\n\nSet-PSRyverConfigPath",
            "title": "Export-PSRyverConfig"
        },
        {
            "location": "/Public/Export-PSRyverConfig/#export-psryverconfig",
            "text": "",
            "title": "Export-PSRyverConfig"
        },
        {
            "location": "/Public/Export-PSRyverConfig/#synopsis",
            "text": "Save the PSRyver module configuration to file.",
            "title": "SYNOPSIS"
        },
        {
            "location": "/Public/Export-PSRyverConfig/#syntax",
            "text": "Export-PSRyverConfig [[-Path] <FileInfo>] [-WhatIf] [-Confirm] [<CommonParameters>]",
            "title": "SYNTAX"
        },
        {
            "location": "/Public/Export-PSRyverConfig/#description",
            "text": "Save the PSRyver module configuration to file.",
            "title": "DESCRIPTION"
        },
        {
            "location": "/Public/Export-PSRyverConfig/#examples",
            "text": "",
            "title": "EXAMPLES"
        },
        {
            "location": "/Public/Export-PSRyverConfig/#example-1",
            "text": "Export-PSRyverConfig  Saves the PSRyver module configuration stored in $Script:PSRyver to the default\nfile path stored in $Script:PSRyverConfigFilePath, which can be accessed via\nGet-PSRyverConfigPath and set via Set-PSRyverConfigPath. \nThe default location\nis '~/.psryver.xml'",
            "title": "EXAMPLE 1"
        },
        {
            "location": "/Public/Export-PSRyverConfig/#example-2",
            "text": "Export-PSRyverConfig -Path '~/.psryver.xml'  Saves the PSRyver module configuration stored in $Script:PSRyver to the\nspecified path of '~/.psryver.xml'.",
            "title": "EXAMPLE 2"
        },
        {
            "location": "/Public/Export-PSRyverConfig/#example-3",
            "text": "'~/.psryver.xml' | Export-PSRyverConfig  Saves the PSRyver module configuration stored in $Script:PSRyver to the\nspecified path of '~/.psryver.xml', which is set via the pipeline.",
            "title": "EXAMPLE 3"
        },
        {
            "location": "/Public/Export-PSRyverConfig/#parameters",
            "text": "",
            "title": "PARAMETERS"
        },
        {
            "location": "/Public/Export-PSRyverConfig/#-path",
            "text": "Specifies the PSRyver config file to export.  Type :   FileInfo  Parameter Sets :   (All)  Aliases :  Required :   False  Position :   1  Default value :   $Script:PSRyverConfigFilePath  Accept pipeline input :   True (ByPropertyName, ByValue)  Accept wildcard characters :   False",
            "title": "-Path"
        },
        {
            "location": "/Public/Export-PSRyverConfig/#-confirm",
            "text": "Prompts you for confirmation before running the cmdlet.  Type :   SwitchParameter  Parameter Sets :   (All)  Aliases :   cf  Required :   False  Position :   Named  Default value :   None  Accept pipeline input :   False  Accept wildcard characters :   False",
            "title": "-Confirm"
        },
        {
            "location": "/Public/Export-PSRyverConfig/#-whatif",
            "text": "Shows what would happen if the cmdlet runs.\nThe cmdlet is not run.  Type :   SwitchParameter  Parameter Sets :   (All)  Aliases :   wi  Required :   False  Position :   Named  Default value :   None  Accept pipeline input :   False  Accept wildcard characters :   False",
            "title": "-WhatIf"
        },
        {
            "location": "/Public/Export-PSRyverConfig/#commonparameters",
            "text": "This cmdlet supports the common parameters: -Debug, -ErrorAction, -ErrorVariable, -InformationAction, -InformationVariable, -OutVariable, -OutBuffer, -PipelineVariable, -Verbose, -WarningAction, and -WarningVariable.\nFor more information, see about_CommonParameters ( http://go.microsoft.com/fwlink/?LinkID=113216 ).",
            "title": "CommonParameters"
        },
        {
            "location": "/Public/Export-PSRyverConfig/#inputs",
            "text": "",
            "title": "INPUTS"
        },
        {
            "location": "/Public/Export-PSRyverConfig/#systemiofileinfo",
            "text": "",
            "title": "System.IO.FileInfo"
        },
        {
            "location": "/Public/Export-PSRyverConfig/#outputs",
            "text": "",
            "title": "OUTPUTS"
        },
        {
            "location": "/Public/Export-PSRyverConfig/#systemvoid",
            "text": "",
            "title": "System.Void"
        },
        {
            "location": "/Public/Export-PSRyverConfig/#notes",
            "text": "Troy Lindsay  Twitter: @troylindsay42  GitHub: tlindsay42",
            "title": "NOTES"
        },
        {
            "location": "/Public/Export-PSRyverConfig/#related-links",
            "text": "https://tlindsay42.github.io/PSRyver/Public/Export-PSRyverConfig/  https://github.com/PSRyver/blob/master/PSRyver/Public/Export-PSRyverConfig.ps1  Import-PSRyverConfig  Read-PSRyverConfig  Get-PSRyverConfig  Set-PSRyverConfig  Get-PSRyverConfigPath  Set-PSRyverConfigPath",
            "title": "RELATED LINKS"
        },
        {
            "location": "/Public/Get-PSRyverConfig/",
            "text": "Get-PSRyverConfig\n\u00b6\n\n\nSYNOPSIS\n\u00b6\n\n\nGet the PSRyver module configuration.\n\n\nSYNTAX\n\u00b6\n\n\nGet-PSRyverConfig [<CommonParameters>]\n\n\n\n\nDESCRIPTION\n\u00b6\n\n\nGet the PSRyver module configuration stored in the $Script:PSRyver variable.\n\n\nEXAMPLES\n\u00b6\n\n\nEXAMPLE 1\n\u00b6\n\n\nGet-PSRyverConfig\n\n\n\n\nReturns the value of the $Script:PSRyver module configuration variable.\n\n\nPARAMETERS\n\u00b6\n\n\nCommonParameters\n\u00b6\n\n\nThis cmdlet supports the common parameters: -Debug, -ErrorAction, -ErrorVariable, -InformationAction, -InformationVariable, -OutVariable, -OutBuffer, -PipelineVariable, -Verbose, -WarningAction, and -WarningVariable.\nFor more information, see about_CommonParameters (\nhttp://go.microsoft.com/fwlink/?LinkID=113216\n).\n\n\nINPUTS\n\u00b6\n\n\nNone\n\u00b6\n\n\nYou cannot pipe input to this cmdlet.\n\n\n\n\n\nOUTPUTS\n\u00b6\n\n\nSystem.Management.Automation.PSObject\n\u00b6\n\n\nNOTES\n\u00b6\n\n\n\n\nTroy Lindsay\n\n\nTwitter: @troylindsay42\n\n\nGitHub: tlindsay42\n\n\n\n\nRELATED LINKS\n\u00b6\n\n\nhttps://tlindsay42.github.io/PSRyver/Public/Get-PSRyverConfig/\n\n\nhttps://github.com/PSRyver/blob/master/PSRyver/Public/Get-PSRyverConfig.ps1\n\n\nSet-PSRyverConfig\n\n\nInitialize-PSRyverConfig\n\n\nRemove-PSRyverConfig",
            "title": "Get-PSRyverConfig"
        },
        {
            "location": "/Public/Get-PSRyverConfig/#get-psryverconfig",
            "text": "",
            "title": "Get-PSRyverConfig"
        },
        {
            "location": "/Public/Get-PSRyverConfig/#synopsis",
            "text": "Get the PSRyver module configuration.",
            "title": "SYNOPSIS"
        },
        {
            "location": "/Public/Get-PSRyverConfig/#syntax",
            "text": "Get-PSRyverConfig [<CommonParameters>]",
            "title": "SYNTAX"
        },
        {
            "location": "/Public/Get-PSRyverConfig/#description",
            "text": "Get the PSRyver module configuration stored in the $Script:PSRyver variable.",
            "title": "DESCRIPTION"
        },
        {
            "location": "/Public/Get-PSRyverConfig/#examples",
            "text": "",
            "title": "EXAMPLES"
        },
        {
            "location": "/Public/Get-PSRyverConfig/#example-1",
            "text": "Get-PSRyverConfig  Returns the value of the $Script:PSRyver module configuration variable.",
            "title": "EXAMPLE 1"
        },
        {
            "location": "/Public/Get-PSRyverConfig/#parameters",
            "text": "",
            "title": "PARAMETERS"
        },
        {
            "location": "/Public/Get-PSRyverConfig/#commonparameters",
            "text": "This cmdlet supports the common parameters: -Debug, -ErrorAction, -ErrorVariable, -InformationAction, -InformationVariable, -OutVariable, -OutBuffer, -PipelineVariable, -Verbose, -WarningAction, and -WarningVariable.\nFor more information, see about_CommonParameters ( http://go.microsoft.com/fwlink/?LinkID=113216 ).",
            "title": "CommonParameters"
        },
        {
            "location": "/Public/Get-PSRyverConfig/#inputs",
            "text": "",
            "title": "INPUTS"
        },
        {
            "location": "/Public/Get-PSRyverConfig/#none",
            "text": "You cannot pipe input to this cmdlet.",
            "title": "None"
        },
        {
            "location": "/Public/Get-PSRyverConfig/#outputs",
            "text": "",
            "title": "OUTPUTS"
        },
        {
            "location": "/Public/Get-PSRyverConfig/#systemmanagementautomationpsobject",
            "text": "",
            "title": "System.Management.Automation.PSObject"
        },
        {
            "location": "/Public/Get-PSRyverConfig/#notes",
            "text": "Troy Lindsay  Twitter: @troylindsay42  GitHub: tlindsay42",
            "title": "NOTES"
        },
        {
            "location": "/Public/Get-PSRyverConfig/#related-links",
            "text": "https://tlindsay42.github.io/PSRyver/Public/Get-PSRyverConfig/  https://github.com/PSRyver/blob/master/PSRyver/Public/Get-PSRyverConfig.ps1  Set-PSRyverConfig  Initialize-PSRyverConfig  Remove-PSRyverConfig",
            "title": "RELATED LINKS"
        },
        {
            "location": "/Public/Get-PSRyverConfigPath/",
            "text": "Get-PSRyverConfigPath\n\u00b6\n\n\nSYNOPSIS\n\u00b6\n\n\nRetrieves the PSRyver config file path.\n\n\nSYNTAX\n\u00b6\n\n\nGet-PSRyverConfigPath [<CommonParameters>]\n\n\n\n\nDESCRIPTION\n\u00b6\n\n\nRetrieves the PSRyver config file path.\n\n\nEXAMPLES\n\u00b6\n\n\nEXAMPLE 1\n\u00b6\n\n\nGet-PSRyverConfigPath\n\n\n\n\nRetrieves the PSRyver config file path.\n\n\nPARAMETERS\n\u00b6\n\n\nCommonParameters\n\u00b6\n\n\nThis cmdlet supports the common parameters: -Debug, -ErrorAction, -ErrorVariable, -InformationAction, -InformationVariable, -OutVariable, -OutBuffer, -PipelineVariable, -Verbose, -WarningAction, and -WarningVariable.\nFor more information, see about_CommonParameters (\nhttp://go.microsoft.com/fwlink/?LinkID=113216\n).\n\n\nINPUTS\n\u00b6\n\n\nNone\n\u00b6\n\n\nYou cannot pipe input to this cmdlet.\n\n\n\n\n\nOUTPUTS\n\u00b6\n\n\nSystem.IO.FileInfo\n\u00b6\n\n\nNOTES\n\u00b6\n\n\n\n\nTroy Lindsay\n\n\nTwitter: @troylindsay42\n\n\nGitHub: tlindsay42\n\n\n\n\nRELATED LINKS\n\u00b6\n\n\nhttps://tlindsay42.github.io/PSRyver/Public/Get-PSRyverConfigPath/\n\n\nhttps://github.com/PSRyver/blob/master/PSRyver/Public/Get-PSRyverConfigPath.ps1\n\n\nSet-PSRyverConfigPath",
            "title": "Get-PSRyverConfigPath"
        },
        {
            "location": "/Public/Get-PSRyverConfigPath/#get-psryverconfigpath",
            "text": "",
            "title": "Get-PSRyverConfigPath"
        },
        {
            "location": "/Public/Get-PSRyverConfigPath/#synopsis",
            "text": "Retrieves the PSRyver config file path.",
            "title": "SYNOPSIS"
        },
        {
            "location": "/Public/Get-PSRyverConfigPath/#syntax",
            "text": "Get-PSRyverConfigPath [<CommonParameters>]",
            "title": "SYNTAX"
        },
        {
            "location": "/Public/Get-PSRyverConfigPath/#description",
            "text": "Retrieves the PSRyver config file path.",
            "title": "DESCRIPTION"
        },
        {
            "location": "/Public/Get-PSRyverConfigPath/#examples",
            "text": "",
            "title": "EXAMPLES"
        },
        {
            "location": "/Public/Get-PSRyverConfigPath/#example-1",
            "text": "Get-PSRyverConfigPath  Retrieves the PSRyver config file path.",
            "title": "EXAMPLE 1"
        },
        {
            "location": "/Public/Get-PSRyverConfigPath/#parameters",
            "text": "",
            "title": "PARAMETERS"
        },
        {
            "location": "/Public/Get-PSRyverConfigPath/#commonparameters",
            "text": "This cmdlet supports the common parameters: -Debug, -ErrorAction, -ErrorVariable, -InformationAction, -InformationVariable, -OutVariable, -OutBuffer, -PipelineVariable, -Verbose, -WarningAction, and -WarningVariable.\nFor more information, see about_CommonParameters ( http://go.microsoft.com/fwlink/?LinkID=113216 ).",
            "title": "CommonParameters"
        },
        {
            "location": "/Public/Get-PSRyverConfigPath/#inputs",
            "text": "",
            "title": "INPUTS"
        },
        {
            "location": "/Public/Get-PSRyverConfigPath/#none",
            "text": "You cannot pipe input to this cmdlet.",
            "title": "None"
        },
        {
            "location": "/Public/Get-PSRyverConfigPath/#outputs",
            "text": "",
            "title": "OUTPUTS"
        },
        {
            "location": "/Public/Get-PSRyverConfigPath/#systemiofileinfo",
            "text": "",
            "title": "System.IO.FileInfo"
        },
        {
            "location": "/Public/Get-PSRyverConfigPath/#notes",
            "text": "Troy Lindsay  Twitter: @troylindsay42  GitHub: tlindsay42",
            "title": "NOTES"
        },
        {
            "location": "/Public/Get-PSRyverConfigPath/#related-links",
            "text": "https://tlindsay42.github.io/PSRyver/Public/Get-PSRyverConfigPath/  https://github.com/PSRyver/blob/master/PSRyver/Public/Get-PSRyverConfigPath.ps1  Set-PSRyverConfigPath",
            "title": "RELATED LINKS"
        },
        {
            "location": "/Public/Get-RyverForum/",
            "text": "Get-RyverForum\n\u00b6\n\n\nSYNOPSIS\n\u00b6\n\n\nQuery for Ryver public forum channels.\n\n\nSYNTAX\n\u00b6\n\n\nGet-RyverForum [[-Name] <String>] [-Detailed] [-Raw] [[-Credential] <PSCredential>] [-IncludeTotalCount]\n [-Skip <UInt64>] [-First <UInt64>] [<CommonParameters>]\n\n\n\n\nDESCRIPTION\n\u00b6\n\n\nQuery for Ryver public forum channels.\n\n\nEXAMPLES\n\u00b6\n\n\nEXAMPLE 1\n\u00b6\n\n\nGet-RyverForum -Name 'All Hands'\n\n\n\n\nQueries for the 'All Hands' public forum channel.\n\n\nEXAMPLE 2\n\u00b6\n\n\nGet-RyverForum -Name 'All Hand*' -Credential ( Get-Credential )\n\n\n\n\nUpdates the $Script:PSRyver.Authorization value storing the basic\nauthentication authorization header to use for all requests and then queries\nfor all public forum channels starting with the string 'All Hand', such as\n'All Hands' and 'All handsome guys like that Troy fellow'.\n=D\n\n\nEXAMPLE 3\n\u00b6\n\n\n'All Hands' | Get-RyverForum -Detailed\n\n\n\n\nQueries for detailed information about the 'All Hands' public forum channel via\nthe pipeline.\n\n\nEXAMPLE 4\n\u00b6\n\n\n'*and*' | Get-RyverForum -Raw\n\n\n\n\nQueries for all public forum channels containing the string 'and', such as\n'All Hands' and 'The Land of Magical Unicorns' and returns the raw, unformatted\noutput.\n\n\nEXAMPLE 5\n\u00b6\n\n\nGet-RyverForum 'All Hands' $true $true\n\n\n\n\nQueries for detailed information about the 'All Hands' public forum channel via\npositional parameters and returns the raw, unformatted output.\n\n\nPARAMETERS\n\u00b6\n\n\n-Credential\n\u00b6\n\n\nCredentials to use for the Ryver API.\n\n\nDefault value is the value set by Set-PSRyverConfig.\n\n\nType\n:\n \nPSCredential\n\n\nParameter Sets\n:\n \n(All)\n\n\nAliases\n:\n\n\n\nRequired\n:\n \nFalse\n\n\nPosition\n:\n \n4\n\n\nDefault value\n:\n \nNone\n\n\nAccept pipeline input\n:\n \nFalse\n\n\nAccept wildcard characters\n:\n \nFalse\n\n\n\n\n\n-Detailed\n\u00b6\n\n\nSpecifies whether to retrieve additional details about each object.\n\n\nType\n:\n \nSwitchParameter\n\n\nParameter Sets\n:\n \n(All)\n\n\nAliases\n:\n\n\n\nRequired\n:\n \nFalse\n\n\nPosition\n:\n \n2\n\n\nDefault value\n:\n \nFalse\n\n\nAccept pipeline input\n:\n \nFalse\n\n\nAccept wildcard characters\n:\n \nFalse\n\n\n\n\n\n-First\n\u00b6\n\n\n{{Fill First Description}}\n\n\nType\n:\n \nUInt64\n\n\nParameter Sets\n:\n \n(All)\n\n\nAliases\n:\n\n\n\nRequired\n:\n \nFalse\n\n\nPosition\n:\n \nNamed\n\n\nDefault value\n:\n \nNone\n\n\nAccept pipeline input\n:\n \nFalse\n\n\nAccept wildcard characters\n:\n \nFalse\n\n\n\n\n\n-IncludeTotalCount\n\u00b6\n\n\n{{Fill IncludeTotalCount Description}}\n\n\nType\n:\n \nSwitchParameter\n\n\nParameter Sets\n:\n \n(All)\n\n\nAliases\n:\n\n\n\nRequired\n:\n \nFalse\n\n\nPosition\n:\n \nNamed\n\n\nDefault value\n:\n \nNone\n\n\nAccept pipeline input\n:\n \nFalse\n\n\nAccept wildcard characters\n:\n \nFalse\n\n\n\n\n\n-Name\n\u00b6\n\n\nSpecifies the public forum channel name. \nCase insensitive.\n\n\nType\n:\n \nString\n\n\nParameter Sets\n:\n \n(All)\n\n\nAliases\n:\n\n\n\nRequired\n:\n \nFalse\n\n\nPosition\n:\n \n1\n\n\nDefault value\n:\n \nNone\n\n\nAccept pipeline input\n:\n \nTrue (ByValue)\n\n\nAccept wildcard characters\n:\n \nTrue\n\n\n\n\n\n-Raw\n\u00b6\n\n\nSpecifies that objects should not be formatted.\n\n\nType\n:\n \nSwitchParameter\n\n\nParameter Sets\n:\n \n(All)\n\n\nAliases\n:\n\n\n\nRequired\n:\n \nFalse\n\n\nPosition\n:\n \n3\n\n\nDefault value\n:\n \nFalse\n\n\nAccept pipeline input\n:\n \nFalse\n\n\nAccept wildcard characters\n:\n \nFalse\n\n\n\n\n\n-Skip\n\u00b6\n\n\n{{Fill Skip Description}}\n\n\nType\n:\n \nUInt64\n\n\nParameter Sets\n:\n \n(All)\n\n\nAliases\n:\n\n\n\nRequired\n:\n \nFalse\n\n\nPosition\n:\n \nNamed\n\n\nDefault value\n:\n \nNone\n\n\nAccept pipeline input\n:\n \nFalse\n\n\nAccept wildcard characters\n:\n \nFalse\n\n\n\n\n\nCommonParameters\n\u00b6\n\n\nThis cmdlet supports the common parameters: -Debug, -ErrorAction, -ErrorVariable, -InformationAction, -InformationVariable, -OutVariable, -OutBuffer, -PipelineVariable, -Verbose, -WarningAction, and -WarningVariable.\nFor more information, see about_CommonParameters (\nhttp://go.microsoft.com/fwlink/?LinkID=113216\n).\n\n\nINPUTS\n\u00b6\n\n\nSystem.String\n\u00b6\n\n\nOUTPUTS\n\u00b6\n\n\nSystem.Management.Automation.PSObject\n\u00b6\n\n\nNOTES\n\u00b6\n\n\n\n\nTroy Lindsay\n\n\nTwitter: @troylindsay42\n\n\nGitHub: tlindsay42\n\n\n\n\nRELATED LINKS\n\u00b6\n\n\nhttps://tlindsay42.github.io/PSRyver/Public/Get-RyverForum/\n\n\nhttps://github.com/PSRyver/blob/master/PSRyver/Public/Get-RyverForum.ps1",
            "title": "Get-RyverForum"
        },
        {
            "location": "/Public/Get-RyverForum/#get-ryverforum",
            "text": "",
            "title": "Get-RyverForum"
        },
        {
            "location": "/Public/Get-RyverForum/#synopsis",
            "text": "Query for Ryver public forum channels.",
            "title": "SYNOPSIS"
        },
        {
            "location": "/Public/Get-RyverForum/#syntax",
            "text": "Get-RyverForum [[-Name] <String>] [-Detailed] [-Raw] [[-Credential] <PSCredential>] [-IncludeTotalCount]\n [-Skip <UInt64>] [-First <UInt64>] [<CommonParameters>]",
            "title": "SYNTAX"
        },
        {
            "location": "/Public/Get-RyverForum/#description",
            "text": "Query for Ryver public forum channels.",
            "title": "DESCRIPTION"
        },
        {
            "location": "/Public/Get-RyverForum/#examples",
            "text": "",
            "title": "EXAMPLES"
        },
        {
            "location": "/Public/Get-RyverForum/#example-1",
            "text": "Get-RyverForum -Name 'All Hands'  Queries for the 'All Hands' public forum channel.",
            "title": "EXAMPLE 1"
        },
        {
            "location": "/Public/Get-RyverForum/#example-2",
            "text": "Get-RyverForum -Name 'All Hand*' -Credential ( Get-Credential )  Updates the $Script:PSRyver.Authorization value storing the basic\nauthentication authorization header to use for all requests and then queries\nfor all public forum channels starting with the string 'All Hand', such as\n'All Hands' and 'All handsome guys like that Troy fellow'.\n=D",
            "title": "EXAMPLE 2"
        },
        {
            "location": "/Public/Get-RyverForum/#example-3",
            "text": "'All Hands' | Get-RyverForum -Detailed  Queries for detailed information about the 'All Hands' public forum channel via\nthe pipeline.",
            "title": "EXAMPLE 3"
        },
        {
            "location": "/Public/Get-RyverForum/#example-4",
            "text": "'*and*' | Get-RyverForum -Raw  Queries for all public forum channels containing the string 'and', such as\n'All Hands' and 'The Land of Magical Unicorns' and returns the raw, unformatted\noutput.",
            "title": "EXAMPLE 4"
        },
        {
            "location": "/Public/Get-RyverForum/#example-5",
            "text": "Get-RyverForum 'All Hands' $true $true  Queries for detailed information about the 'All Hands' public forum channel via\npositional parameters and returns the raw, unformatted output.",
            "title": "EXAMPLE 5"
        },
        {
            "location": "/Public/Get-RyverForum/#parameters",
            "text": "",
            "title": "PARAMETERS"
        },
        {
            "location": "/Public/Get-RyverForum/#-credential",
            "text": "Credentials to use for the Ryver API.  Default value is the value set by Set-PSRyverConfig.  Type :   PSCredential  Parameter Sets :   (All)  Aliases :  Required :   False  Position :   4  Default value :   None  Accept pipeline input :   False  Accept wildcard characters :   False",
            "title": "-Credential"
        },
        {
            "location": "/Public/Get-RyverForum/#-detailed",
            "text": "Specifies whether to retrieve additional details about each object.  Type :   SwitchParameter  Parameter Sets :   (All)  Aliases :  Required :   False  Position :   2  Default value :   False  Accept pipeline input :   False  Accept wildcard characters :   False",
            "title": "-Detailed"
        },
        {
            "location": "/Public/Get-RyverForum/#-first",
            "text": "{{Fill First Description}}  Type :   UInt64  Parameter Sets :   (All)  Aliases :  Required :   False  Position :   Named  Default value :   None  Accept pipeline input :   False  Accept wildcard characters :   False",
            "title": "-First"
        },
        {
            "location": "/Public/Get-RyverForum/#-includetotalcount",
            "text": "{{Fill IncludeTotalCount Description}}  Type :   SwitchParameter  Parameter Sets :   (All)  Aliases :  Required :   False  Position :   Named  Default value :   None  Accept pipeline input :   False  Accept wildcard characters :   False",
            "title": "-IncludeTotalCount"
        },
        {
            "location": "/Public/Get-RyverForum/#-name",
            "text": "Specifies the public forum channel name. \nCase insensitive.  Type :   String  Parameter Sets :   (All)  Aliases :  Required :   False  Position :   1  Default value :   None  Accept pipeline input :   True (ByValue)  Accept wildcard characters :   True",
            "title": "-Name"
        },
        {
            "location": "/Public/Get-RyverForum/#-raw",
            "text": "Specifies that objects should not be formatted.  Type :   SwitchParameter  Parameter Sets :   (All)  Aliases :  Required :   False  Position :   3  Default value :   False  Accept pipeline input :   False  Accept wildcard characters :   False",
            "title": "-Raw"
        },
        {
            "location": "/Public/Get-RyverForum/#-skip",
            "text": "{{Fill Skip Description}}  Type :   UInt64  Parameter Sets :   (All)  Aliases :  Required :   False  Position :   Named  Default value :   None  Accept pipeline input :   False  Accept wildcard characters :   False",
            "title": "-Skip"
        },
        {
            "location": "/Public/Get-RyverForum/#commonparameters",
            "text": "This cmdlet supports the common parameters: -Debug, -ErrorAction, -ErrorVariable, -InformationAction, -InformationVariable, -OutVariable, -OutBuffer, -PipelineVariable, -Verbose, -WarningAction, and -WarningVariable.\nFor more information, see about_CommonParameters ( http://go.microsoft.com/fwlink/?LinkID=113216 ).",
            "title": "CommonParameters"
        },
        {
            "location": "/Public/Get-RyverForum/#inputs",
            "text": "",
            "title": "INPUTS"
        },
        {
            "location": "/Public/Get-RyverForum/#systemstring",
            "text": "",
            "title": "System.String"
        },
        {
            "location": "/Public/Get-RyverForum/#outputs",
            "text": "",
            "title": "OUTPUTS"
        },
        {
            "location": "/Public/Get-RyverForum/#systemmanagementautomationpsobject",
            "text": "",
            "title": "System.Management.Automation.PSObject"
        },
        {
            "location": "/Public/Get-RyverForum/#notes",
            "text": "Troy Lindsay  Twitter: @troylindsay42  GitHub: tlindsay42",
            "title": "NOTES"
        },
        {
            "location": "/Public/Get-RyverForum/#related-links",
            "text": "https://tlindsay42.github.io/PSRyver/Public/Get-RyverForum/  https://github.com/PSRyver/blob/master/PSRyver/Public/Get-RyverForum.ps1",
            "title": "RELATED LINKS"
        },
        {
            "location": "/Public/Get-RyverTeam/",
            "text": "Get-RyverTeam\n\u00b6\n\n\nSYNOPSIS\n\u00b6\n\n\nQuery for Ryver private team channels.\n\n\nSYNTAX\n\u00b6\n\n\nGet-RyverTeam [[-Name] <String>] [-Detailed] [-Raw] [[-Credential] <PSCredential>] [<CommonParameters>]\n\n\n\n\nDESCRIPTION\n\u00b6\n\n\nQuery for Ryver private team channels.\n\n\nEXAMPLES\n\u00b6\n\n\nEXAMPLE 1\n\u00b6\n\n\nGet-RyverTeam -Name 'Members Only!'\n\n\n\n\nQueries for the 'Members Only!' private team channel.\n\n\nEXAMPLE 2\n\u00b6\n\n\nGet-RyverTeam -Name '*Only*' -Credential ( Get-Credential )\n\n\n\n\nUpdates the $Script:PSRyver.Authorization value storing the basic\nauthentication authorization header to use for all requests and then queries\nfor all private team channels containing the string 'Only', such as\n'Members Only!' and 'Ninjas only'.\n\n\nEXAMPLE 3\n\u00b6\n\n\n'Members Only!' | Get-RyverTeam -Raw\n\n\n\n\nQueries for the 'Members Only!' private team channel via the pipeline and\nreturns the raw, unformatted output.\n\n\nEXAMPLE 4\n\u00b6\n\n\n'*Member*' | Get-RyverTeam -Detailed\n\n\n\n\nQueries for detailed information about all private team channels containing the\nstring 'Member', such as 'Members Only!' and 'Illuminati Membership Committee'.\n\n\nEXAMPLE 5\n\u00b6\n\n\nGet-RyverTeam 'Members Only!' $true $true\n\n\n\n\nQueries for detailed information about the 'Members Only!' private team channel\nvia positional parameters and returns the raw, unformatted output.\n\n\nPARAMETERS\n\u00b6\n\n\n-Credential\n\u00b6\n\n\nCredentials to use for the Ryver API.\n\n\nDefault value is the value set by Set-PSRyverConfig.\n\n\nType\n:\n \nPSCredential\n\n\nParameter Sets\n:\n \n(All)\n\n\nAliases\n:\n\n\n\nRequired\n:\n \nFalse\n\n\nPosition\n:\n \n4\n\n\nDefault value\n:\n \nNone\n\n\nAccept pipeline input\n:\n \nFalse\n\n\nAccept wildcard characters\n:\n \nFalse\n\n\n\n\n\n-Detailed\n\u00b6\n\n\nSpecifies whether to retrieve additional details about each object.\n\n\nType\n:\n \nSwitchParameter\n\n\nParameter Sets\n:\n \n(All)\n\n\nAliases\n:\n\n\n\nRequired\n:\n \nFalse\n\n\nPosition\n:\n \n2\n\n\nDefault value\n:\n \nFalse\n\n\nAccept pipeline input\n:\n \nFalse\n\n\nAccept wildcard characters\n:\n \nFalse\n\n\n\n\n\n-Name\n\u00b6\n\n\nPrivate team channel name. \nCase insensitive.\n\n\nType\n:\n \nString\n\n\nParameter Sets\n:\n \n(All)\n\n\nAliases\n:\n\n\n\nRequired\n:\n \nFalse\n\n\nPosition\n:\n \n1\n\n\nDefault value\n:\n \nNone\n\n\nAccept pipeline input\n:\n \nTrue (ByValue)\n\n\nAccept wildcard characters\n:\n \nTrue\n\n\n\n\n\n-Raw\n\u00b6\n\n\nSpecifies that objects should not be formatted.\n\n\nType\n:\n \nSwitchParameter\n\n\nParameter Sets\n:\n \n(All)\n\n\nAliases\n:\n\n\n\nRequired\n:\n \nFalse\n\n\nPosition\n:\n \n3\n\n\nDefault value\n:\n \nFalse\n\n\nAccept pipeline input\n:\n \nFalse\n\n\nAccept wildcard characters\n:\n \nFalse\n\n\n\n\n\nCommonParameters\n\u00b6\n\n\nThis cmdlet supports the common parameters: -Debug, -ErrorAction, -ErrorVariable, -InformationAction, -InformationVariable, -OutVariable, -OutBuffer, -PipelineVariable, -Verbose, -WarningAction, and -WarningVariable.\nFor more information, see about_CommonParameters (\nhttp://go.microsoft.com/fwlink/?LinkID=113216\n).\n\n\nINPUTS\n\u00b6\n\n\nSystem.String\n\u00b6\n\n\nOUTPUTS\n\u00b6\n\n\nSystem.Management.Automation.PSObject\n\u00b6\n\n\nNOTES\n\u00b6\n\n\n\n\nTroy Lindsay\n\n\nTwitter: @troylindsay42\n\n\nGitHub: tlindsay42\n\n\n\n\nRELATED LINKS\n\u00b6\n\n\nhttps://tlindsay42.github.io/PSRyver/Public/Get-RyverTeam/\n\n\nhttps://github.com/PSRyver/blob/master/PSRyver/Public/Get-RyverTeam.ps1",
            "title": "Get-RyverTeam"
        },
        {
            "location": "/Public/Get-RyverTeam/#get-ryverteam",
            "text": "",
            "title": "Get-RyverTeam"
        },
        {
            "location": "/Public/Get-RyverTeam/#synopsis",
            "text": "Query for Ryver private team channels.",
            "title": "SYNOPSIS"
        },
        {
            "location": "/Public/Get-RyverTeam/#syntax",
            "text": "Get-RyverTeam [[-Name] <String>] [-Detailed] [-Raw] [[-Credential] <PSCredential>] [<CommonParameters>]",
            "title": "SYNTAX"
        },
        {
            "location": "/Public/Get-RyverTeam/#description",
            "text": "Query for Ryver private team channels.",
            "title": "DESCRIPTION"
        },
        {
            "location": "/Public/Get-RyverTeam/#examples",
            "text": "",
            "title": "EXAMPLES"
        },
        {
            "location": "/Public/Get-RyverTeam/#example-1",
            "text": "Get-RyverTeam -Name 'Members Only!'  Queries for the 'Members Only!' private team channel.",
            "title": "EXAMPLE 1"
        },
        {
            "location": "/Public/Get-RyverTeam/#example-2",
            "text": "Get-RyverTeam -Name '*Only*' -Credential ( Get-Credential )  Updates the $Script:PSRyver.Authorization value storing the basic\nauthentication authorization header to use for all requests and then queries\nfor all private team channels containing the string 'Only', such as\n'Members Only!' and 'Ninjas only'.",
            "title": "EXAMPLE 2"
        },
        {
            "location": "/Public/Get-RyverTeam/#example-3",
            "text": "'Members Only!' | Get-RyverTeam -Raw  Queries for the 'Members Only!' private team channel via the pipeline and\nreturns the raw, unformatted output.",
            "title": "EXAMPLE 3"
        },
        {
            "location": "/Public/Get-RyverTeam/#example-4",
            "text": "'*Member*' | Get-RyverTeam -Detailed  Queries for detailed information about all private team channels containing the\nstring 'Member', such as 'Members Only!' and 'Illuminati Membership Committee'.",
            "title": "EXAMPLE 4"
        },
        {
            "location": "/Public/Get-RyverTeam/#example-5",
            "text": "Get-RyverTeam 'Members Only!' $true $true  Queries for detailed information about the 'Members Only!' private team channel\nvia positional parameters and returns the raw, unformatted output.",
            "title": "EXAMPLE 5"
        },
        {
            "location": "/Public/Get-RyverTeam/#parameters",
            "text": "",
            "title": "PARAMETERS"
        },
        {
            "location": "/Public/Get-RyverTeam/#-credential",
            "text": "Credentials to use for the Ryver API.  Default value is the value set by Set-PSRyverConfig.  Type :   PSCredential  Parameter Sets :   (All)  Aliases :  Required :   False  Position :   4  Default value :   None  Accept pipeline input :   False  Accept wildcard characters :   False",
            "title": "-Credential"
        },
        {
            "location": "/Public/Get-RyverTeam/#-detailed",
            "text": "Specifies whether to retrieve additional details about each object.  Type :   SwitchParameter  Parameter Sets :   (All)  Aliases :  Required :   False  Position :   2  Default value :   False  Accept pipeline input :   False  Accept wildcard characters :   False",
            "title": "-Detailed"
        },
        {
            "location": "/Public/Get-RyverTeam/#-name",
            "text": "Private team channel name. \nCase insensitive.  Type :   String  Parameter Sets :   (All)  Aliases :  Required :   False  Position :   1  Default value :   None  Accept pipeline input :   True (ByValue)  Accept wildcard characters :   True",
            "title": "-Name"
        },
        {
            "location": "/Public/Get-RyverTeam/#-raw",
            "text": "Specifies that objects should not be formatted.  Type :   SwitchParameter  Parameter Sets :   (All)  Aliases :  Required :   False  Position :   3  Default value :   False  Accept pipeline input :   False  Accept wildcard characters :   False",
            "title": "-Raw"
        },
        {
            "location": "/Public/Get-RyverTeam/#commonparameters",
            "text": "This cmdlet supports the common parameters: -Debug, -ErrorAction, -ErrorVariable, -InformationAction, -InformationVariable, -OutVariable, -OutBuffer, -PipelineVariable, -Verbose, -WarningAction, and -WarningVariable.\nFor more information, see about_CommonParameters ( http://go.microsoft.com/fwlink/?LinkID=113216 ).",
            "title": "CommonParameters"
        },
        {
            "location": "/Public/Get-RyverTeam/#inputs",
            "text": "",
            "title": "INPUTS"
        },
        {
            "location": "/Public/Get-RyverTeam/#systemstring",
            "text": "",
            "title": "System.String"
        },
        {
            "location": "/Public/Get-RyverTeam/#outputs",
            "text": "",
            "title": "OUTPUTS"
        },
        {
            "location": "/Public/Get-RyverTeam/#systemmanagementautomationpsobject",
            "text": "",
            "title": "System.Management.Automation.PSObject"
        },
        {
            "location": "/Public/Get-RyverTeam/#notes",
            "text": "Troy Lindsay  Twitter: @troylindsay42  GitHub: tlindsay42",
            "title": "NOTES"
        },
        {
            "location": "/Public/Get-RyverTeam/#related-links",
            "text": "https://tlindsay42.github.io/PSRyver/Public/Get-RyverTeam/  https://github.com/PSRyver/blob/master/PSRyver/Public/Get-RyverTeam.ps1",
            "title": "RELATED LINKS"
        },
        {
            "location": "/Public/Import-PSRyverConfig/",
            "text": "Import-PSRyverConfig\n\u00b6\n\n\nSYNOPSIS\n\u00b6\n\n\nImport a PSRyver module configuration from file.\n\n\nSYNTAX\n\u00b6\n\n\nImport-PSRyverConfig [[-Path] <FileInfo>] [-WhatIf] [-Confirm] [<CommonParameters>]\n\n\n\n\nDESCRIPTION\n\u00b6\n\n\nImport a PSRyver module configuration from file and set the $Script:PSRyver\nmodule configuration variable.\n\n\nEXAMPLES\n\u00b6\n\n\nEXAMPLE 1\n\u00b6\n\n\n\n\n\n\n\nPARAMETERS\n\u00b6\n\n\n-Path\n\u00b6\n\n\nSpecifies the PSRyver config file to import.\n\n\nType\n:\n \nFileInfo\n\n\nParameter Sets\n:\n \n(All)\n\n\nAliases\n:\n\n\n\nRequired\n:\n \nFalse\n\n\nPosition\n:\n \n1\n\n\nDefault value\n:\n \n$Script:PSRyverConfigFilePath\n\n\nAccept pipeline input\n:\n \nTrue (ByValue)\n\n\nAccept wildcard characters\n:\n \nFalse\n\n\n\n\n\n-Confirm\n\u00b6\n\n\nPrompts you for confirmation before running the cmdlet.\n\n\nType\n:\n \nSwitchParameter\n\n\nParameter Sets\n:\n \n(All)\n\n\nAliases\n:\n \ncf\n\n\n\nRequired\n:\n \nFalse\n\n\nPosition\n:\n \nNamed\n\n\nDefault value\n:\n \nNone\n\n\nAccept pipeline input\n:\n \nFalse\n\n\nAccept wildcard characters\n:\n \nFalse\n\n\n\n\n\n-WhatIf\n\u00b6\n\n\nShows what would happen if the cmdlet runs.\nThe cmdlet is not run.\n\n\nType\n:\n \nSwitchParameter\n\n\nParameter Sets\n:\n \n(All)\n\n\nAliases\n:\n \nwi\n\n\n\nRequired\n:\n \nFalse\n\n\nPosition\n:\n \nNamed\n\n\nDefault value\n:\n \nNone\n\n\nAccept pipeline input\n:\n \nFalse\n\n\nAccept wildcard characters\n:\n \nFalse\n\n\n\n\n\nCommonParameters\n\u00b6\n\n\nThis cmdlet supports the common parameters: -Debug, -ErrorAction, -ErrorVariable, -InformationAction, -InformationVariable, -OutVariable, -OutBuffer, -PipelineVariable, -Verbose, -WarningAction, and -WarningVariable.\nFor more information, see about_CommonParameters (\nhttp://go.microsoft.com/fwlink/?LinkID=113216\n).\n\n\nINPUTS\n\u00b6\n\n\nSystem.IO.FileInfo\n\u00b6\n\n\nOUTPUTS\n\u00b6\n\n\nSystem.Void\n\u00b6\n\n\nNOTES\n\u00b6\n\n\n\n\nTroy Lindsay\n\n\nTwitter: @troylindsay42\n\n\nGitHub: tlindsay42\n\n\n\n\nRELATED LINKS\n\u00b6\n\n\nhttps://tlindsay42.github.io/PSRyver/Public/Import-PSRyverConfig/\n\n\nhttps://github.com/PSRyver/blob/master/PSRyver/Public/Import-PSRyverConfig.ps1\n\n\nExport-PSRyverConfig\n\n\nRead-PSRyverConfig\n\n\nGet-PSRyverConfig\n\n\nSet-PSRyverConfig\n\n\nGet-PSRyverConfigPath\n\n\nSet-PSRyverConfigPath",
            "title": "Import-PSRyverConfig"
        },
        {
            "location": "/Public/Import-PSRyverConfig/#import-psryverconfig",
            "text": "",
            "title": "Import-PSRyverConfig"
        },
        {
            "location": "/Public/Import-PSRyverConfig/#synopsis",
            "text": "Import a PSRyver module configuration from file.",
            "title": "SYNOPSIS"
        },
        {
            "location": "/Public/Import-PSRyverConfig/#syntax",
            "text": "Import-PSRyverConfig [[-Path] <FileInfo>] [-WhatIf] [-Confirm] [<CommonParameters>]",
            "title": "SYNTAX"
        },
        {
            "location": "/Public/Import-PSRyverConfig/#description",
            "text": "Import a PSRyver module configuration from file and set the $Script:PSRyver\nmodule configuration variable.",
            "title": "DESCRIPTION"
        },
        {
            "location": "/Public/Import-PSRyverConfig/#examples",
            "text": "",
            "title": "EXAMPLES"
        },
        {
            "location": "/Public/Import-PSRyverConfig/#example-1",
            "text": "",
            "title": "EXAMPLE 1"
        },
        {
            "location": "/Public/Import-PSRyverConfig/#parameters",
            "text": "",
            "title": "PARAMETERS"
        },
        {
            "location": "/Public/Import-PSRyverConfig/#-path",
            "text": "Specifies the PSRyver config file to import.  Type :   FileInfo  Parameter Sets :   (All)  Aliases :  Required :   False  Position :   1  Default value :   $Script:PSRyverConfigFilePath  Accept pipeline input :   True (ByValue)  Accept wildcard characters :   False",
            "title": "-Path"
        },
        {
            "location": "/Public/Import-PSRyverConfig/#-confirm",
            "text": "Prompts you for confirmation before running the cmdlet.  Type :   SwitchParameter  Parameter Sets :   (All)  Aliases :   cf  Required :   False  Position :   Named  Default value :   None  Accept pipeline input :   False  Accept wildcard characters :   False",
            "title": "-Confirm"
        },
        {
            "location": "/Public/Import-PSRyverConfig/#-whatif",
            "text": "Shows what would happen if the cmdlet runs.\nThe cmdlet is not run.  Type :   SwitchParameter  Parameter Sets :   (All)  Aliases :   wi  Required :   False  Position :   Named  Default value :   None  Accept pipeline input :   False  Accept wildcard characters :   False",
            "title": "-WhatIf"
        },
        {
            "location": "/Public/Import-PSRyverConfig/#commonparameters",
            "text": "This cmdlet supports the common parameters: -Debug, -ErrorAction, -ErrorVariable, -InformationAction, -InformationVariable, -OutVariable, -OutBuffer, -PipelineVariable, -Verbose, -WarningAction, and -WarningVariable.\nFor more information, see about_CommonParameters ( http://go.microsoft.com/fwlink/?LinkID=113216 ).",
            "title": "CommonParameters"
        },
        {
            "location": "/Public/Import-PSRyverConfig/#inputs",
            "text": "",
            "title": "INPUTS"
        },
        {
            "location": "/Public/Import-PSRyverConfig/#systemiofileinfo",
            "text": "",
            "title": "System.IO.FileInfo"
        },
        {
            "location": "/Public/Import-PSRyverConfig/#outputs",
            "text": "",
            "title": "OUTPUTS"
        },
        {
            "location": "/Public/Import-PSRyverConfig/#systemvoid",
            "text": "",
            "title": "System.Void"
        },
        {
            "location": "/Public/Import-PSRyverConfig/#notes",
            "text": "Troy Lindsay  Twitter: @troylindsay42  GitHub: tlindsay42",
            "title": "NOTES"
        },
        {
            "location": "/Public/Import-PSRyverConfig/#related-links",
            "text": "https://tlindsay42.github.io/PSRyver/Public/Import-PSRyverConfig/  https://github.com/PSRyver/blob/master/PSRyver/Public/Import-PSRyverConfig.ps1  Export-PSRyverConfig  Read-PSRyverConfig  Get-PSRyverConfig  Set-PSRyverConfig  Get-PSRyverConfigPath  Set-PSRyverConfigPath",
            "title": "RELATED LINKS"
        },
        {
            "location": "/Public/Read-PSRyverConfig/",
            "text": "Read-PSRyverConfig\n\u00b6\n\n\nSYNOPSIS\n\u00b6\n\n\nRead a PSRyver module configuration file.\n\n\nSYNTAX\n\u00b6\n\n\nRead-PSRyverConfig [[-Path] <FileInfo>] [<CommonParameters>]\n\n\n\n\nDESCRIPTION\n\u00b6\n\n\nRead a PSRyver module configuration file and if the user has the correct key\nand run from a Windows system, decrypt the encrypted settings via the\nData Protection API (DPAPI).\n\n\nEXAMPLES\n\u00b6\n\n\nEXAMPLE 1\n\u00b6\n\n\nRead-PSRyverConfig\n\n\n\n\nReads the PSRyver module configuration stored in the file defined in\n'$Script:PSRyverConfigFilePath', which can be accessed via\n'Get-PSRyverConfigPath' and set via 'Set-PSRyverConfigPath'. \nThe encrypted\nvalues are decrypted if the user has the correct key and if run from a Windows\nsystem.\n\n\nThe default location is '~/.psryver.xml'\n\n\nEXAMPLE 2\n\u00b6\n\n\nRead-PSRyverConfig -Path '~/.psryver.xml'\n\n\n\n\nReads & decrypts the PSRyver module configuration stored in the specified path.\n\n\nEXAMPLE 3\n\u00b6\n\n\n'~/.psryver.xml' | Read-PSRyverConfig\n\n\n\n\nReads & decrypts the PSRyver module configuration stored in the path specified\nvia the pipeline.\n\n\nEXAMPLE 4\n\u00b6\n\n\nRead-PSRyverConfig '~/.psryver.xml'\n\n\n\n\nReads & decrypts the PSRyver module configuration stored in the path specified\nvia positional parameter.\n\n\nPARAMETERS\n\u00b6\n\n\n-Path\n\u00b6\n\n\nSpecifies the PSRyver config file.\n\n\nType\n:\n \nFileInfo\n\n\nParameter Sets\n:\n \n(All)\n\n\nAliases\n:\n\n\n\nRequired\n:\n \nFalse\n\n\nPosition\n:\n \n1\n\n\nDefault value\n:\n \n$Script:PSRyverConfigFilePath\n\n\nAccept pipeline input\n:\n \nTrue (ByValue)\n\n\nAccept wildcard characters\n:\n \nFalse\n\n\n\n\n\nCommonParameters\n\u00b6\n\n\nThis cmdlet supports the common parameters: -Debug, -ErrorAction, -ErrorVariable, -InformationAction, -InformationVariable, -OutVariable, -OutBuffer, -PipelineVariable, -Verbose, -WarningAction, and -WarningVariable.\nFor more information, see about_CommonParameters (\nhttp://go.microsoft.com/fwlink/?LinkID=113216\n).\n\n\nINPUTS\n\u00b6\n\n\nSystem.IO.FileInfo\n\u00b6\n\n\nOUTPUTS\n\u00b6\n\n\nSystem.Void\n\u00b6\n\n\nNOTES\n\u00b6\n\n\n\n\nTroy Lindsay\n\n\nTwitter: @troylindsay42\n\n\nGitHub: tlindsay42\n\n\n\n\nRELATED LINKS\n\u00b6\n\n\nhttps://tlindsay42.github.io/PSRyver/Public/Read-PSRyverConfig/\n\n\nhttps://github.com/PSRyver/blob/master/PSRyver/Public/Read-PSRyverConfig.ps1\n\n\nImport-PSRyverConfig",
            "title": "Read-PSRyverConfig"
        },
        {
            "location": "/Public/Read-PSRyverConfig/#read-psryverconfig",
            "text": "",
            "title": "Read-PSRyverConfig"
        },
        {
            "location": "/Public/Read-PSRyverConfig/#synopsis",
            "text": "Read a PSRyver module configuration file.",
            "title": "SYNOPSIS"
        },
        {
            "location": "/Public/Read-PSRyverConfig/#syntax",
            "text": "Read-PSRyverConfig [[-Path] <FileInfo>] [<CommonParameters>]",
            "title": "SYNTAX"
        },
        {
            "location": "/Public/Read-PSRyverConfig/#description",
            "text": "Read a PSRyver module configuration file and if the user has the correct key\nand run from a Windows system, decrypt the encrypted settings via the\nData Protection API (DPAPI).",
            "title": "DESCRIPTION"
        },
        {
            "location": "/Public/Read-PSRyverConfig/#examples",
            "text": "",
            "title": "EXAMPLES"
        },
        {
            "location": "/Public/Read-PSRyverConfig/#example-1",
            "text": "Read-PSRyverConfig  Reads the PSRyver module configuration stored in the file defined in\n'$Script:PSRyverConfigFilePath', which can be accessed via\n'Get-PSRyverConfigPath' and set via 'Set-PSRyverConfigPath'. \nThe encrypted\nvalues are decrypted if the user has the correct key and if run from a Windows\nsystem.  The default location is '~/.psryver.xml'",
            "title": "EXAMPLE 1"
        },
        {
            "location": "/Public/Read-PSRyverConfig/#example-2",
            "text": "Read-PSRyverConfig -Path '~/.psryver.xml'  Reads & decrypts the PSRyver module configuration stored in the specified path.",
            "title": "EXAMPLE 2"
        },
        {
            "location": "/Public/Read-PSRyverConfig/#example-3",
            "text": "'~/.psryver.xml' | Read-PSRyverConfig  Reads & decrypts the PSRyver module configuration stored in the path specified\nvia the pipeline.",
            "title": "EXAMPLE 3"
        },
        {
            "location": "/Public/Read-PSRyverConfig/#example-4",
            "text": "Read-PSRyverConfig '~/.psryver.xml'  Reads & decrypts the PSRyver module configuration stored in the path specified\nvia positional parameter.",
            "title": "EXAMPLE 4"
        },
        {
            "location": "/Public/Read-PSRyverConfig/#parameters",
            "text": "",
            "title": "PARAMETERS"
        },
        {
            "location": "/Public/Read-PSRyverConfig/#-path",
            "text": "Specifies the PSRyver config file.  Type :   FileInfo  Parameter Sets :   (All)  Aliases :  Required :   False  Position :   1  Default value :   $Script:PSRyverConfigFilePath  Accept pipeline input :   True (ByValue)  Accept wildcard characters :   False",
            "title": "-Path"
        },
        {
            "location": "/Public/Read-PSRyverConfig/#commonparameters",
            "text": "This cmdlet supports the common parameters: -Debug, -ErrorAction, -ErrorVariable, -InformationAction, -InformationVariable, -OutVariable, -OutBuffer, -PipelineVariable, -Verbose, -WarningAction, and -WarningVariable.\nFor more information, see about_CommonParameters ( http://go.microsoft.com/fwlink/?LinkID=113216 ).",
            "title": "CommonParameters"
        },
        {
            "location": "/Public/Read-PSRyverConfig/#inputs",
            "text": "",
            "title": "INPUTS"
        },
        {
            "location": "/Public/Read-PSRyverConfig/#systemiofileinfo",
            "text": "",
            "title": "System.IO.FileInfo"
        },
        {
            "location": "/Public/Read-PSRyverConfig/#outputs",
            "text": "",
            "title": "OUTPUTS"
        },
        {
            "location": "/Public/Read-PSRyverConfig/#systemvoid",
            "text": "",
            "title": "System.Void"
        },
        {
            "location": "/Public/Read-PSRyverConfig/#notes",
            "text": "Troy Lindsay  Twitter: @troylindsay42  GitHub: tlindsay42",
            "title": "NOTES"
        },
        {
            "location": "/Public/Read-PSRyverConfig/#related-links",
            "text": "https://tlindsay42.github.io/PSRyver/Public/Read-PSRyverConfig/  https://github.com/PSRyver/blob/master/PSRyver/Public/Read-PSRyverConfig.ps1  Import-PSRyverConfig",
            "title": "RELATED LINKS"
        },
        {
            "location": "/Public/Remove-PSRyverConfig/",
            "text": "Remove-PSRyverConfig\n\u00b6\n\n\nSYNOPSIS\n\u00b6\n\n\nRemove the PSRyver module configuration.\n\n\nSYNTAX\n\u00b6\n\n\nRemove-PSRyverConfig [-WhatIf] [-Confirm] [<CommonParameters>]\n\n\n\n\nDESCRIPTION\n\u00b6\n\n\nRemove the PSRyver module configuration by removing the $Script:PSRyver\nvariable. \nRun 'Import-PSRyverConfig' or 'Initialize-PSRyverConfig' to\nrecreate it.\n\n\nEXAMPLES\n\u00b6\n\n\nEXAMPLE 1\n\u00b6\n\n\nRemove-PSRyverConfig\n\n\n\n\nRemove the PSRyver module configuration by removing the $Script:PSRyver\nvariable.\n\n\nPARAMETERS\n\u00b6\n\n\n-Confirm\n\u00b6\n\n\nPrompts you for confirmation before running the cmdlet.\n\n\nType\n:\n \nSwitchParameter\n\n\nParameter Sets\n:\n \n(All)\n\n\nAliases\n:\n \ncf\n\n\n\nRequired\n:\n \nFalse\n\n\nPosition\n:\n \nNamed\n\n\nDefault value\n:\n \nNone\n\n\nAccept pipeline input\n:\n \nFalse\n\n\nAccept wildcard characters\n:\n \nFalse\n\n\n\n\n\n-WhatIf\n\u00b6\n\n\nShows what would happen if the cmdlet runs.\nThe cmdlet is not run.\n\n\nType\n:\n \nSwitchParameter\n\n\nParameter Sets\n:\n \n(All)\n\n\nAliases\n:\n \nwi\n\n\n\nRequired\n:\n \nFalse\n\n\nPosition\n:\n \nNamed\n\n\nDefault value\n:\n \nNone\n\n\nAccept pipeline input\n:\n \nFalse\n\n\nAccept wildcard characters\n:\n \nFalse\n\n\n\n\n\nCommonParameters\n\u00b6\n\n\nThis cmdlet supports the common parameters: -Debug, -ErrorAction, -ErrorVariable, -InformationAction, -InformationVariable, -OutVariable, -OutBuffer, -PipelineVariable, -Verbose, -WarningAction, and -WarningVariable.\nFor more information, see about_CommonParameters (\nhttp://go.microsoft.com/fwlink/?LinkID=113216\n).\n\n\nINPUTS\n\u00b6\n\n\nNone\n\u00b6\n\n\nYou cannot pipe input to this cmdlet.\n\n\n\n\n\nOUTPUTS\n\u00b6\n\n\nSystem.Void\n\u00b6\n\n\nNOTES\n\u00b6\n\n\n\n\nTroy Lindsay\n\n\nTwitter: @troylindsay42\n\n\nGitHub: tlindsay42\n\n\n\n\nRELATED LINKS\n\u00b6\n\n\nhttps://tlindsay42.github.io/PSRyver/Public/Remove-PSRyverConfig/\n\n\nhttps://github.com/PSRyver/blob/master/PSRyver/Public/Remove-PSRyverConfig.ps1\n\n\nGet-PSRyverConfig\n\n\nInitialize-PSRyverConfig\n\n\nExport-PSRyverConfig",
            "title": "Remove-PSRyverConfig"
        },
        {
            "location": "/Public/Remove-PSRyverConfig/#remove-psryverconfig",
            "text": "",
            "title": "Remove-PSRyverConfig"
        },
        {
            "location": "/Public/Remove-PSRyverConfig/#synopsis",
            "text": "Remove the PSRyver module configuration.",
            "title": "SYNOPSIS"
        },
        {
            "location": "/Public/Remove-PSRyverConfig/#syntax",
            "text": "Remove-PSRyverConfig [-WhatIf] [-Confirm] [<CommonParameters>]",
            "title": "SYNTAX"
        },
        {
            "location": "/Public/Remove-PSRyverConfig/#description",
            "text": "Remove the PSRyver module configuration by removing the $Script:PSRyver\nvariable. \nRun 'Import-PSRyverConfig' or 'Initialize-PSRyverConfig' to\nrecreate it.",
            "title": "DESCRIPTION"
        },
        {
            "location": "/Public/Remove-PSRyverConfig/#examples",
            "text": "",
            "title": "EXAMPLES"
        },
        {
            "location": "/Public/Remove-PSRyverConfig/#example-1",
            "text": "Remove-PSRyverConfig  Remove the PSRyver module configuration by removing the $Script:PSRyver\nvariable.",
            "title": "EXAMPLE 1"
        },
        {
            "location": "/Public/Remove-PSRyverConfig/#parameters",
            "text": "",
            "title": "PARAMETERS"
        },
        {
            "location": "/Public/Remove-PSRyverConfig/#-confirm",
            "text": "Prompts you for confirmation before running the cmdlet.  Type :   SwitchParameter  Parameter Sets :   (All)  Aliases :   cf  Required :   False  Position :   Named  Default value :   None  Accept pipeline input :   False  Accept wildcard characters :   False",
            "title": "-Confirm"
        },
        {
            "location": "/Public/Remove-PSRyverConfig/#-whatif",
            "text": "Shows what would happen if the cmdlet runs.\nThe cmdlet is not run.  Type :   SwitchParameter  Parameter Sets :   (All)  Aliases :   wi  Required :   False  Position :   Named  Default value :   None  Accept pipeline input :   False  Accept wildcard characters :   False",
            "title": "-WhatIf"
        },
        {
            "location": "/Public/Remove-PSRyverConfig/#commonparameters",
            "text": "This cmdlet supports the common parameters: -Debug, -ErrorAction, -ErrorVariable, -InformationAction, -InformationVariable, -OutVariable, -OutBuffer, -PipelineVariable, -Verbose, -WarningAction, and -WarningVariable.\nFor more information, see about_CommonParameters ( http://go.microsoft.com/fwlink/?LinkID=113216 ).",
            "title": "CommonParameters"
        },
        {
            "location": "/Public/Remove-PSRyverConfig/#inputs",
            "text": "",
            "title": "INPUTS"
        },
        {
            "location": "/Public/Remove-PSRyverConfig/#none",
            "text": "You cannot pipe input to this cmdlet.",
            "title": "None"
        },
        {
            "location": "/Public/Remove-PSRyverConfig/#outputs",
            "text": "",
            "title": "OUTPUTS"
        },
        {
            "location": "/Public/Remove-PSRyverConfig/#systemvoid",
            "text": "",
            "title": "System.Void"
        },
        {
            "location": "/Public/Remove-PSRyverConfig/#notes",
            "text": "Troy Lindsay  Twitter: @troylindsay42  GitHub: tlindsay42",
            "title": "NOTES"
        },
        {
            "location": "/Public/Remove-PSRyverConfig/#related-links",
            "text": "https://tlindsay42.github.io/PSRyver/Public/Remove-PSRyverConfig/  https://github.com/PSRyver/blob/master/PSRyver/Public/Remove-PSRyverConfig.ps1  Get-PSRyverConfig  Initialize-PSRyverConfig  Export-PSRyverConfig",
            "title": "RELATED LINKS"
        },
        {
            "location": "/Public/Set-PSRyverConfig/",
            "text": "Set-PSRyverConfig\n\u00b6\n\n\nSYNOPSIS\n\u00b6\n\n\nSets parameters in the PSRyver module configuration.\n\n\nSYNTAX\n\u00b6\n\n\nSet-PSRyverConfig [[-RestApiBaseUri] <String>] [[-Credential] <PSCredential>] [[-IncomingWebhookUri] <String>]\n [[-Proxy] <String>] [-MapUser] [-ForceVerbose] [-WhatIf] [-Confirm] [<CommonParameters>]\n\n\n\n\nDESCRIPTION\n\u00b6\n\n\nSets parameters in the PSRyver module configuration, which are stored in the\n$Script:PSRyver variable.\n\n\nEXAMPLES\n\u00b6\n\n\nEXAMPLE 1\n\u00b6\n\n\nSet-PSRyverConfig https://example.ryver.com/api/1/odata.svc ( Get-Credential )\n\n\n\n\nUses positional parameters to set the $Script:PSRyver.RestApiBaseUri value\nstoring the default REST API URI and the $Script:PSRyver.Authorization value\nstoring the basic authentication authorization header to use for all requests.\n\n\nThe values of all other settings are left intact.\n\n\nEXAMPLE 2\n\u00b6\n\n\nSet-PSRyverConfig -IncomingWebhookUri https://example.ryver.com/application/webhook/4z-_G76nj7Fic-M\n\n\n\n\nSets the $Script:PSRyver.IncomingWebhookUri value storing the default\nincoming webhook URI to use for all requests.\n\n\nThe values of all other settings are left intact.\n\n\nEXAMPLE 3\n\u00b6\n\n\n[PSCustomObject] @{ Proxy = 'https://192.168.1.1/'; MapUser = $true; ForceVerbose = $true } | Set-PSRyverConfig\n\n\n\n\nConfigures the default proxy, enables user mapping, and prevents sensitive\nvalues from being redacted.\n\n\nThe values of all other settings are left intact.\n\n\nPARAMETERS\n\u00b6\n\n\n-Credential\n\u00b6\n\n\nSpecify the Credentials to use for basic authentication.\n\n\nOnly serialized to disk as the base64 encoded authorization header value on\nWindows via DPAPI.\n\n\nType\n:\n \nPSCredential\n\n\nParameter Sets\n:\n \n(All)\n\n\nAliases\n:\n\n\n\nRequired\n:\n \nFalse\n\n\nPosition\n:\n \n2\n\n\nDefault value\n:\n \nNone\n\n\nAccept pipeline input\n:\n \nTrue (ByPropertyName)\n\n\nAccept wildcard characters\n:\n \nFalse\n\n\n\n\n\n-ForceVerbose\n\u00b6\n\n\nIf set to true, we allow verbose output that may include sensitive data\n\n\n*** WARNING ***\nIf you set this to true, your Ryver token will be visible as plain text in\nverbose output.\n\n\nType\n:\n \nSwitchParameter\n\n\nParameter Sets\n:\n \n(All)\n\n\nAliases\n:\n\n\n\nRequired\n:\n \nFalse\n\n\nPosition\n:\n \n6\n\n\nDefault value\n:\n \nFalse\n\n\nAccept pipeline input\n:\n \nTrue (ByPropertyName)\n\n\nAccept wildcard characters\n:\n \nFalse\n\n\n\n\n\n-IncomingWebhookUri\n\u00b6\n\n\nSpecifies the incoming webhook URI. \nOnly serialized to disk on Windows via DPAPI.\n\n\nType\n:\n \nString\n\n\nParameter Sets\n:\n \n(All)\n\n\nAliases\n:\n\n\n\nRequired\n:\n \nFalse\n\n\nPosition\n:\n \n3\n\n\nDefault value\n:\n \nNone\n\n\nAccept pipeline input\n:\n \nTrue (ByPropertyName)\n\n\nAccept wildcard characters\n:\n \nFalse\n\n\n\n\n\n-MapUser\n\u00b6\n\n\nWhether to generate a map of Ryver user ID to name on module load, for use in\nRyver File commands\n\n\nType\n:\n \nSwitchParameter\n\n\nParameter Sets\n:\n \n(All)\n\n\nAliases\n:\n\n\n\nRequired\n:\n \nFalse\n\n\nPosition\n:\n \n5\n\n\nDefault value\n:\n \nFalse\n\n\nAccept pipeline input\n:\n \nTrue (ByPropertyName)\n\n\nAccept wildcard characters\n:\n \nFalse\n\n\n\n\n\n-Proxy\n\u00b6\n\n\nProxy to use.\n\n\nType\n:\n \nString\n\n\nParameter Sets\n:\n \n(All)\n\n\nAliases\n:\n\n\n\nRequired\n:\n \nFalse\n\n\nPosition\n:\n \n4\n\n\nDefault value\n:\n \nNone\n\n\nAccept pipeline input\n:\n \nTrue (ByPropertyName)\n\n\nAccept wildcard characters\n:\n \nFalse\n\n\n\n\n\n-RestApiBaseUri\n\u00b6\n\n\nSpecifies the REST API URI. \nOnly serialized to disk on Windows via DPAPI.\n\n\nType\n:\n \nString\n\n\nParameter Sets\n:\n \n(All)\n\n\nAliases\n:\n\n\n\nRequired\n:\n \nFalse\n\n\nPosition\n:\n \n1\n\n\nDefault value\n:\n \nNone\n\n\nAccept pipeline input\n:\n \nTrue (ByPropertyName)\n\n\nAccept wildcard characters\n:\n \nFalse\n\n\n\n\n\n-Confirm\n\u00b6\n\n\nPrompts you for confirmation before running the cmdlet.\n\n\nType\n:\n \nSwitchParameter\n\n\nParameter Sets\n:\n \n(All)\n\n\nAliases\n:\n \ncf\n\n\n\nRequired\n:\n \nFalse\n\n\nPosition\n:\n \nNamed\n\n\nDefault value\n:\n \nNone\n\n\nAccept pipeline input\n:\n \nFalse\n\n\nAccept wildcard characters\n:\n \nFalse\n\n\n\n\n\n-WhatIf\n\u00b6\n\n\nShows what would happen if the cmdlet runs.\nThe cmdlet is not run.\n\n\nType\n:\n \nSwitchParameter\n\n\nParameter Sets\n:\n \n(All)\n\n\nAliases\n:\n \nwi\n\n\n\nRequired\n:\n \nFalse\n\n\nPosition\n:\n \nNamed\n\n\nDefault value\n:\n \nNone\n\n\nAccept pipeline input\n:\n \nFalse\n\n\nAccept wildcard characters\n:\n \nFalse\n\n\n\n\n\nCommonParameters\n\u00b6\n\n\nThis cmdlet supports the common parameters: -Debug, -ErrorAction, -ErrorVariable, -InformationAction, -InformationVariable, -OutVariable, -OutBuffer, -PipelineVariable, -Verbose, -WarningAction, and -WarningVariable.\nFor more information, see about_CommonParameters (\nhttp://go.microsoft.com/fwlink/?LinkID=113216\n).\n\n\nINPUTS\n\u00b6\n\n\nSystem.Management.Automation.PSCustomObject\n\u00b6\n\n\nOUTPUTS\n\u00b6\n\n\nSystem.Void\n\u00b6\n\n\nNOTES\n\u00b6\n\n\n\n\nTroy Lindsay\n\n\nTwitter: @troylindsay42\n\n\nGitHub: tlindsay42\n\n\n\n\nRELATED LINKS\n\u00b6\n\n\nhttps://tlindsay42.github.io/PSRyver/Public/Set-PSRyverConfig/\n\n\nhttps://github.com/PSRyver/blob/master/PSRyver/Public/Set-PSRyverConfig.ps1\n\n\nGet-PSRyverConfig\n\n\nExport-PSRyverConfig\n\n\nRemove-PSRyverConfig\n\n\nInitialize-PSRyverConfig",
            "title": "Set-PSRyverConfig"
        },
        {
            "location": "/Public/Set-PSRyverConfig/#set-psryverconfig",
            "text": "",
            "title": "Set-PSRyverConfig"
        },
        {
            "location": "/Public/Set-PSRyverConfig/#synopsis",
            "text": "Sets parameters in the PSRyver module configuration.",
            "title": "SYNOPSIS"
        },
        {
            "location": "/Public/Set-PSRyverConfig/#syntax",
            "text": "Set-PSRyverConfig [[-RestApiBaseUri] <String>] [[-Credential] <PSCredential>] [[-IncomingWebhookUri] <String>]\n [[-Proxy] <String>] [-MapUser] [-ForceVerbose] [-WhatIf] [-Confirm] [<CommonParameters>]",
            "title": "SYNTAX"
        },
        {
            "location": "/Public/Set-PSRyverConfig/#description",
            "text": "Sets parameters in the PSRyver module configuration, which are stored in the\n$Script:PSRyver variable.",
            "title": "DESCRIPTION"
        },
        {
            "location": "/Public/Set-PSRyverConfig/#examples",
            "text": "",
            "title": "EXAMPLES"
        },
        {
            "location": "/Public/Set-PSRyverConfig/#example-1",
            "text": "Set-PSRyverConfig https://example.ryver.com/api/1/odata.svc ( Get-Credential )  Uses positional parameters to set the $Script:PSRyver.RestApiBaseUri value\nstoring the default REST API URI and the $Script:PSRyver.Authorization value\nstoring the basic authentication authorization header to use for all requests.  The values of all other settings are left intact.",
            "title": "EXAMPLE 1"
        },
        {
            "location": "/Public/Set-PSRyverConfig/#example-2",
            "text": "Set-PSRyverConfig -IncomingWebhookUri https://example.ryver.com/application/webhook/4z-_G76nj7Fic-M  Sets the $Script:PSRyver.IncomingWebhookUri value storing the default\nincoming webhook URI to use for all requests.  The values of all other settings are left intact.",
            "title": "EXAMPLE 2"
        },
        {
            "location": "/Public/Set-PSRyverConfig/#example-3",
            "text": "[PSCustomObject] @{ Proxy = 'https://192.168.1.1/'; MapUser = $true; ForceVerbose = $true } | Set-PSRyverConfig  Configures the default proxy, enables user mapping, and prevents sensitive\nvalues from being redacted.  The values of all other settings are left intact.",
            "title": "EXAMPLE 3"
        },
        {
            "location": "/Public/Set-PSRyverConfig/#parameters",
            "text": "",
            "title": "PARAMETERS"
        },
        {
            "location": "/Public/Set-PSRyverConfig/#-credential",
            "text": "Specify the Credentials to use for basic authentication.  Only serialized to disk as the base64 encoded authorization header value on\nWindows via DPAPI.  Type :   PSCredential  Parameter Sets :   (All)  Aliases :  Required :   False  Position :   2  Default value :   None  Accept pipeline input :   True (ByPropertyName)  Accept wildcard characters :   False",
            "title": "-Credential"
        },
        {
            "location": "/Public/Set-PSRyverConfig/#-forceverbose",
            "text": "If set to true, we allow verbose output that may include sensitive data  *** WARNING ***\nIf you set this to true, your Ryver token will be visible as plain text in\nverbose output.  Type :   SwitchParameter  Parameter Sets :   (All)  Aliases :  Required :   False  Position :   6  Default value :   False  Accept pipeline input :   True (ByPropertyName)  Accept wildcard characters :   False",
            "title": "-ForceVerbose"
        },
        {
            "location": "/Public/Set-PSRyverConfig/#-incomingwebhookuri",
            "text": "Specifies the incoming webhook URI. \nOnly serialized to disk on Windows via DPAPI.  Type :   String  Parameter Sets :   (All)  Aliases :  Required :   False  Position :   3  Default value :   None  Accept pipeline input :   True (ByPropertyName)  Accept wildcard characters :   False",
            "title": "-IncomingWebhookUri"
        },
        {
            "location": "/Public/Set-PSRyverConfig/#-mapuser",
            "text": "Whether to generate a map of Ryver user ID to name on module load, for use in\nRyver File commands  Type :   SwitchParameter  Parameter Sets :   (All)  Aliases :  Required :   False  Position :   5  Default value :   False  Accept pipeline input :   True (ByPropertyName)  Accept wildcard characters :   False",
            "title": "-MapUser"
        },
        {
            "location": "/Public/Set-PSRyverConfig/#-proxy",
            "text": "Proxy to use.  Type :   String  Parameter Sets :   (All)  Aliases :  Required :   False  Position :   4  Default value :   None  Accept pipeline input :   True (ByPropertyName)  Accept wildcard characters :   False",
            "title": "-Proxy"
        },
        {
            "location": "/Public/Set-PSRyverConfig/#-restapibaseuri",
            "text": "Specifies the REST API URI. \nOnly serialized to disk on Windows via DPAPI.  Type :   String  Parameter Sets :   (All)  Aliases :  Required :   False  Position :   1  Default value :   None  Accept pipeline input :   True (ByPropertyName)  Accept wildcard characters :   False",
            "title": "-RestApiBaseUri"
        },
        {
            "location": "/Public/Set-PSRyverConfig/#-confirm",
            "text": "Prompts you for confirmation before running the cmdlet.  Type :   SwitchParameter  Parameter Sets :   (All)  Aliases :   cf  Required :   False  Position :   Named  Default value :   None  Accept pipeline input :   False  Accept wildcard characters :   False",
            "title": "-Confirm"
        },
        {
            "location": "/Public/Set-PSRyverConfig/#-whatif",
            "text": "Shows what would happen if the cmdlet runs.\nThe cmdlet is not run.  Type :   SwitchParameter  Parameter Sets :   (All)  Aliases :   wi  Required :   False  Position :   Named  Default value :   None  Accept pipeline input :   False  Accept wildcard characters :   False",
            "title": "-WhatIf"
        },
        {
            "location": "/Public/Set-PSRyverConfig/#commonparameters",
            "text": "This cmdlet supports the common parameters: -Debug, -ErrorAction, -ErrorVariable, -InformationAction, -InformationVariable, -OutVariable, -OutBuffer, -PipelineVariable, -Verbose, -WarningAction, and -WarningVariable.\nFor more information, see about_CommonParameters ( http://go.microsoft.com/fwlink/?LinkID=113216 ).",
            "title": "CommonParameters"
        },
        {
            "location": "/Public/Set-PSRyverConfig/#inputs",
            "text": "",
            "title": "INPUTS"
        },
        {
            "location": "/Public/Set-PSRyverConfig/#systemmanagementautomationpscustomobject",
            "text": "",
            "title": "System.Management.Automation.PSCustomObject"
        },
        {
            "location": "/Public/Set-PSRyverConfig/#outputs",
            "text": "",
            "title": "OUTPUTS"
        },
        {
            "location": "/Public/Set-PSRyverConfig/#systemvoid",
            "text": "",
            "title": "System.Void"
        },
        {
            "location": "/Public/Set-PSRyverConfig/#notes",
            "text": "Troy Lindsay  Twitter: @troylindsay42  GitHub: tlindsay42",
            "title": "NOTES"
        },
        {
            "location": "/Public/Set-PSRyverConfig/#related-links",
            "text": "https://tlindsay42.github.io/PSRyver/Public/Set-PSRyverConfig/  https://github.com/PSRyver/blob/master/PSRyver/Public/Set-PSRyverConfig.ps1  Get-PSRyverConfig  Export-PSRyverConfig  Remove-PSRyverConfig  Initialize-PSRyverConfig",
            "title": "RELATED LINKS"
        },
        {
            "location": "/Public/Set-PSRyverConfigPath/",
            "text": "Set-PSRyverConfigPath\n\u00b6\n\n\nSYNOPSIS\n\u00b6\n\n\nSets the PSRyver config file path.\n\n\nSYNTAX\n\u00b6\n\n\nSet-PSRyverConfigPath [-Path] <FileInfo> [-WhatIf] [-Confirm] [<CommonParameters>]\n\n\n\n\nDESCRIPTION\n\u00b6\n\n\nSets the PSRyver config file path.\n\n\nEXAMPLES\n\u00b6\n\n\nEXAMPLE 1\n\u00b6\n\n\nSet-PSRyverConfigPath -Path '~/.psryver.xml'\n\n\n\n\nSets the PSRyver config file path.\n\n\nEXAMPLE 2\n\u00b6\n\n\n'~/.psryver.xml' | Set-PSRyverConfigPath\n\n\n\n\nSets the PSRyver config file path via the pipeline.\n\n\nEXAMPLE 3\n\u00b6\n\n\nSet-PSRyverConfigPath '~/.psryver.xml'\n\n\n\n\nSets the PSRyver config file path via positional parameter.\n\n\nPARAMETERS\n\u00b6\n\n\n-Path\n\u00b6\n\n\nSpecifies the PSRyver config file path that will be used as the default.\n\n\nType\n:\n \nFileInfo\n\n\nParameter Sets\n:\n \n(All)\n\n\nAliases\n:\n\n\n\nRequired\n:\n \nTrue\n\n\nPosition\n:\n \n1\n\n\nDefault value\n:\n \nNone\n\n\nAccept pipeline input\n:\n \nTrue (ByValue)\n\n\nAccept wildcard characters\n:\n \nFalse\n\n\n\n\n\n-Confirm\n\u00b6\n\n\nPrompts you for confirmation before running the cmdlet.\n\n\nType\n:\n \nSwitchParameter\n\n\nParameter Sets\n:\n \n(All)\n\n\nAliases\n:\n \ncf\n\n\n\nRequired\n:\n \nFalse\n\n\nPosition\n:\n \nNamed\n\n\nDefault value\n:\n \nNone\n\n\nAccept pipeline input\n:\n \nFalse\n\n\nAccept wildcard characters\n:\n \nFalse\n\n\n\n\n\n-WhatIf\n\u00b6\n\n\nShows what would happen if the cmdlet runs.\nThe cmdlet is not run.\n\n\nType\n:\n \nSwitchParameter\n\n\nParameter Sets\n:\n \n(All)\n\n\nAliases\n:\n \nwi\n\n\n\nRequired\n:\n \nFalse\n\n\nPosition\n:\n \nNamed\n\n\nDefault value\n:\n \nNone\n\n\nAccept pipeline input\n:\n \nFalse\n\n\nAccept wildcard characters\n:\n \nFalse\n\n\n\n\n\nCommonParameters\n\u00b6\n\n\nThis cmdlet supports the common parameters: -Debug, -ErrorAction, -ErrorVariable, -InformationAction, -InformationVariable, -OutVariable, -OutBuffer, -PipelineVariable, -Verbose, -WarningAction, and -WarningVariable.\nFor more information, see about_CommonParameters (\nhttp://go.microsoft.com/fwlink/?LinkID=113216\n).\n\n\nINPUTS\n\u00b6\n\n\nSystem.IO.FileInfo\n\u00b6\n\n\nOUTPUTS\n\u00b6\n\n\nSystem.IO.FileInfo\n\u00b6\n\n\nNOTES\n\u00b6\n\n\n\n\nTroy Lindsay\n\n\nTwitter: @troylindsay42\n\n\nGitHub: tlindsay42\n\n\n\n\nRELATED LINKS\n\u00b6\n\n\nhttps://tlindsay42.github.io/PSRyver/Public/Set-PSRyverConfigPath/\n\n\nhttps://github.com/PSRyver/blob/master/PSRyver/Public/Set-PSRyverConfigPath.ps1\n\n\nGet-PSRyverConfigPath",
            "title": "Set-PSRyverConfigPath"
        },
        {
            "location": "/Public/Set-PSRyverConfigPath/#set-psryverconfigpath",
            "text": "",
            "title": "Set-PSRyverConfigPath"
        },
        {
            "location": "/Public/Set-PSRyverConfigPath/#synopsis",
            "text": "Sets the PSRyver config file path.",
            "title": "SYNOPSIS"
        },
        {
            "location": "/Public/Set-PSRyverConfigPath/#syntax",
            "text": "Set-PSRyverConfigPath [-Path] <FileInfo> [-WhatIf] [-Confirm] [<CommonParameters>]",
            "title": "SYNTAX"
        },
        {
            "location": "/Public/Set-PSRyverConfigPath/#description",
            "text": "Sets the PSRyver config file path.",
            "title": "DESCRIPTION"
        },
        {
            "location": "/Public/Set-PSRyverConfigPath/#examples",
            "text": "",
            "title": "EXAMPLES"
        },
        {
            "location": "/Public/Set-PSRyverConfigPath/#example-1",
            "text": "Set-PSRyverConfigPath -Path '~/.psryver.xml'  Sets the PSRyver config file path.",
            "title": "EXAMPLE 1"
        },
        {
            "location": "/Public/Set-PSRyverConfigPath/#example-2",
            "text": "'~/.psryver.xml' | Set-PSRyverConfigPath  Sets the PSRyver config file path via the pipeline.",
            "title": "EXAMPLE 2"
        },
        {
            "location": "/Public/Set-PSRyverConfigPath/#example-3",
            "text": "Set-PSRyverConfigPath '~/.psryver.xml'  Sets the PSRyver config file path via positional parameter.",
            "title": "EXAMPLE 3"
        },
        {
            "location": "/Public/Set-PSRyverConfigPath/#parameters",
            "text": "",
            "title": "PARAMETERS"
        },
        {
            "location": "/Public/Set-PSRyverConfigPath/#-path",
            "text": "Specifies the PSRyver config file path that will be used as the default.  Type :   FileInfo  Parameter Sets :   (All)  Aliases :  Required :   True  Position :   1  Default value :   None  Accept pipeline input :   True (ByValue)  Accept wildcard characters :   False",
            "title": "-Path"
        },
        {
            "location": "/Public/Set-PSRyverConfigPath/#-confirm",
            "text": "Prompts you for confirmation before running the cmdlet.  Type :   SwitchParameter  Parameter Sets :   (All)  Aliases :   cf  Required :   False  Position :   Named  Default value :   None  Accept pipeline input :   False  Accept wildcard characters :   False",
            "title": "-Confirm"
        },
        {
            "location": "/Public/Set-PSRyverConfigPath/#-whatif",
            "text": "Shows what would happen if the cmdlet runs.\nThe cmdlet is not run.  Type :   SwitchParameter  Parameter Sets :   (All)  Aliases :   wi  Required :   False  Position :   Named  Default value :   None  Accept pipeline input :   False  Accept wildcard characters :   False",
            "title": "-WhatIf"
        },
        {
            "location": "/Public/Set-PSRyverConfigPath/#commonparameters",
            "text": "This cmdlet supports the common parameters: -Debug, -ErrorAction, -ErrorVariable, -InformationAction, -InformationVariable, -OutVariable, -OutBuffer, -PipelineVariable, -Verbose, -WarningAction, and -WarningVariable.\nFor more information, see about_CommonParameters ( http://go.microsoft.com/fwlink/?LinkID=113216 ).",
            "title": "CommonParameters"
        },
        {
            "location": "/Public/Set-PSRyverConfigPath/#inputs",
            "text": "",
            "title": "INPUTS"
        },
        {
            "location": "/Public/Set-PSRyverConfigPath/#systemiofileinfo",
            "text": "",
            "title": "System.IO.FileInfo"
        },
        {
            "location": "/Public/Set-PSRyverConfigPath/#outputs",
            "text": "",
            "title": "OUTPUTS"
        },
        {
            "location": "/Public/Set-PSRyverConfigPath/#systemiofileinfo_1",
            "text": "",
            "title": "System.IO.FileInfo"
        },
        {
            "location": "/Public/Set-PSRyverConfigPath/#notes",
            "text": "Troy Lindsay  Twitter: @troylindsay42  GitHub: tlindsay42",
            "title": "NOTES"
        },
        {
            "location": "/Public/Set-PSRyverConfigPath/#related-links",
            "text": "https://tlindsay42.github.io/PSRyver/Public/Set-PSRyverConfigPath/  https://github.com/PSRyver/blob/master/PSRyver/Public/Set-PSRyverConfigPath.ps1  Get-PSRyverConfigPath",
            "title": "RELATED LINKS"
        },
        {
            "location": "/Private/Assert-RyverApiConfig/",
            "text": "Assert-RyverApiConfig\n\u00b6\n\n\nSYNOPSIS\n\u00b6\n\n\nValidates the PSRyver REST API configuration.\n\n\nSYNTAX\n\u00b6\n\n\nAssert-RyverApiConfig [<CommonParameters>]\n\n\n\n\nDESCRIPTION\n\u00b6\n\n\nValidates that the $Script:PSPRyver.RestApiBaseUri and\n$Script:PSPRyver.Authorization values are set to valid\nspecifications, and throws terminating errors if not.\n\n\nEXAMPLES\n\u00b6\n\n\nEXAMPLE 1\n\u00b6\n\n\nAssert-RyverApiConfig\n\n\n\n\nValidates that the $Script:PSPRyver.RestApiBaseUri and\n$Script:PSPRyver.Authorization values are set to valid\nspecifications, and throws terminating errors if not.\n\n\nPARAMETERS\n\u00b6\n\n\nCommonParameters\n\u00b6\n\n\nThis cmdlet supports the common parameters: -Debug, -ErrorAction, -ErrorVariable, -InformationAction, -InformationVariable, -OutVariable, -OutBuffer, -PipelineVariable, -Verbose, -WarningAction, and -WarningVariable.\nFor more information, see about_CommonParameters (\nhttp://go.microsoft.com/fwlink/?LinkID=113216\n).\n\n\nINPUTS\n\u00b6\n\n\nNone\n\u00b6\n\n\nYou cannot pipe input to this cmdlet.\n\n\n\n\n\nOUTPUTS\n\u00b6\n\n\nSystem.Void\n\u00b6\n\n\nNOTES\n\u00b6\n\n\n\n\nTroy Lindsay\n\n\nTwitter: @troylindsay42\n\n\nGitHub: tlindsay42\n\n\n\n\nRELATED LINKS\n\u00b6\n\n\nhttps://tlindsay42.github.io/PSRyver/Private/Assert-RyverApiConfig/\n\n\nhttps://github.com/PSRyver/blob/master/PSRyver/Private/Assert-RyverApiConfig.ps1",
            "title": "Assert-RyverApiConfig"
        },
        {
            "location": "/Private/Assert-RyverApiConfig/#assert-ryverapiconfig",
            "text": "",
            "title": "Assert-RyverApiConfig"
        },
        {
            "location": "/Private/Assert-RyverApiConfig/#synopsis",
            "text": "Validates the PSRyver REST API configuration.",
            "title": "SYNOPSIS"
        },
        {
            "location": "/Private/Assert-RyverApiConfig/#syntax",
            "text": "Assert-RyverApiConfig [<CommonParameters>]",
            "title": "SYNTAX"
        },
        {
            "location": "/Private/Assert-RyverApiConfig/#description",
            "text": "Validates that the $Script:PSPRyver.RestApiBaseUri and\n$Script:PSPRyver.Authorization values are set to valid\nspecifications, and throws terminating errors if not.",
            "title": "DESCRIPTION"
        },
        {
            "location": "/Private/Assert-RyverApiConfig/#examples",
            "text": "",
            "title": "EXAMPLES"
        },
        {
            "location": "/Private/Assert-RyverApiConfig/#example-1",
            "text": "Assert-RyverApiConfig  Validates that the $Script:PSPRyver.RestApiBaseUri and\n$Script:PSPRyver.Authorization values are set to valid\nspecifications, and throws terminating errors if not.",
            "title": "EXAMPLE 1"
        },
        {
            "location": "/Private/Assert-RyverApiConfig/#parameters",
            "text": "",
            "title": "PARAMETERS"
        },
        {
            "location": "/Private/Assert-RyverApiConfig/#commonparameters",
            "text": "This cmdlet supports the common parameters: -Debug, -ErrorAction, -ErrorVariable, -InformationAction, -InformationVariable, -OutVariable, -OutBuffer, -PipelineVariable, -Verbose, -WarningAction, and -WarningVariable.\nFor more information, see about_CommonParameters ( http://go.microsoft.com/fwlink/?LinkID=113216 ).",
            "title": "CommonParameters"
        },
        {
            "location": "/Private/Assert-RyverApiConfig/#inputs",
            "text": "",
            "title": "INPUTS"
        },
        {
            "location": "/Private/Assert-RyverApiConfig/#none",
            "text": "You cannot pipe input to this cmdlet.",
            "title": "None"
        },
        {
            "location": "/Private/Assert-RyverApiConfig/#outputs",
            "text": "",
            "title": "OUTPUTS"
        },
        {
            "location": "/Private/Assert-RyverApiConfig/#systemvoid",
            "text": "",
            "title": "System.Void"
        },
        {
            "location": "/Private/Assert-RyverApiConfig/#notes",
            "text": "Troy Lindsay  Twitter: @troylindsay42  GitHub: tlindsay42",
            "title": "NOTES"
        },
        {
            "location": "/Private/Assert-RyverApiConfig/#related-links",
            "text": "https://tlindsay42.github.io/PSRyver/Private/Assert-RyverApiConfig/  https://github.com/PSRyver/blob/master/PSRyver/Private/Assert-RyverApiConfig.ps1",
            "title": "RELATED LINKS"
        },
        {
            "location": "/Private/Convert-ColorToHexTriplet/",
            "text": "Convert-ColorToHexTriplet\n\u00b6\n\n\nSYNOPSIS\n\u00b6\n\n\nConverts a color object to a RGB hex triplet.\n\n\nSYNTAX\n\u00b6\n\n\nConvert-ColorToHexTriplet [-Color] <Color> [<CommonParameters>]\n\n\n\n\nDESCRIPTION\n\u00b6\n\n\nConverts a System.Drawing.Color object to a hexadecimal code representing that\ncolor.\n\n\nEXAMPLES\n\u00b6\n\n\nEXAMPLE 1\n\u00b6\n\n\nConvert-ColorToHexTriplet -Color ( [System.Drawing.Color]::Red )\n\n\n\n\nReturns '#FF0000'.\n\n\nEXAMPLE 2\n\u00b6\n\n\n[System.Drawing.Color]::Azure | Convert-ColorToHexTriplet\n\n\n\n\nSpecifies the color to convert via the pipeline and returns '#F0FFFF'.\n\n\nEXAMPLE 3\n\u00b6\n\n\nConvert-ColorToHexTriplet ( [System.Drawing.Color]::BlancheDalmond )\n\n\n\n\nSpecifies the color to convert via positional parameter and returns '#FFEBCD'.\n\n\nPARAMETERS\n\u00b6\n\n\n-Color\n\u00b6\n\n\nSpecifies the color to convert.\n\n\nType\n:\n \nColor\n\n\nParameter Sets\n:\n \n(All)\n\n\nAliases\n:\n\n\n\nRequired\n:\n \nTrue\n\n\nPosition\n:\n \n1\n\n\nDefault value\n:\n \nNone\n\n\nAccept pipeline input\n:\n \nTrue (ByValue)\n\n\nAccept wildcard characters\n:\n \nFalse\n\n\n\n\n\nCommonParameters\n\u00b6\n\n\nThis cmdlet supports the common parameters: -Debug, -ErrorAction, -ErrorVariable, -InformationAction, -InformationVariable, -OutVariable, -OutBuffer, -PipelineVariable, -Verbose, -WarningAction, and -WarningVariable.\nFor more information, see about_CommonParameters (\nhttp://go.microsoft.com/fwlink/?LinkID=113216\n).\n\n\nINPUTS\n\u00b6\n\n\nSystem.Drawing.Color\n\u00b6\n\n\nOUTPUTS\n\u00b6\n\n\nSystem.String\n\u00b6\n\n\nNOTES\n\u00b6\n\n\n\n\nTroy Lindsay\n\n\nTwitter: @troylindsay42\n\n\nGitHub: tlindsay42\n\n\n\n\nRELATED LINKS\n\u00b6\n\n\nhttps://tlindsay42.github.io/PSRyver/Private/Convert-ColorToHexTriplet/\n\n\nhttps://github.com/PSRyver/blob/master/PSRyver/Private/Convert-ColorToHexTriplet.ps1\n\n\nhttps://en.wikipedia.org/wiki/Web_colors#Hex_triplet",
            "title": "Convert-ColorToHexTriplet"
        },
        {
            "location": "/Private/Convert-ColorToHexTriplet/#convert-colortohextriplet",
            "text": "",
            "title": "Convert-ColorToHexTriplet"
        },
        {
            "location": "/Private/Convert-ColorToHexTriplet/#synopsis",
            "text": "Converts a color object to a RGB hex triplet.",
            "title": "SYNOPSIS"
        },
        {
            "location": "/Private/Convert-ColorToHexTriplet/#syntax",
            "text": "Convert-ColorToHexTriplet [-Color] <Color> [<CommonParameters>]",
            "title": "SYNTAX"
        },
        {
            "location": "/Private/Convert-ColorToHexTriplet/#description",
            "text": "Converts a System.Drawing.Color object to a hexadecimal code representing that\ncolor.",
            "title": "DESCRIPTION"
        },
        {
            "location": "/Private/Convert-ColorToHexTriplet/#examples",
            "text": "",
            "title": "EXAMPLES"
        },
        {
            "location": "/Private/Convert-ColorToHexTriplet/#example-1",
            "text": "Convert-ColorToHexTriplet -Color ( [System.Drawing.Color]::Red )  Returns '#FF0000'.",
            "title": "EXAMPLE 1"
        },
        {
            "location": "/Private/Convert-ColorToHexTriplet/#example-2",
            "text": "[System.Drawing.Color]::Azure | Convert-ColorToHexTriplet  Specifies the color to convert via the pipeline and returns '#F0FFFF'.",
            "title": "EXAMPLE 2"
        },
        {
            "location": "/Private/Convert-ColorToHexTriplet/#example-3",
            "text": "Convert-ColorToHexTriplet ( [System.Drawing.Color]::BlancheDalmond )  Specifies the color to convert via positional parameter and returns '#FFEBCD'.",
            "title": "EXAMPLE 3"
        },
        {
            "location": "/Private/Convert-ColorToHexTriplet/#parameters",
            "text": "",
            "title": "PARAMETERS"
        },
        {
            "location": "/Private/Convert-ColorToHexTriplet/#-color",
            "text": "Specifies the color to convert.  Type :   Color  Parameter Sets :   (All)  Aliases :  Required :   True  Position :   1  Default value :   None  Accept pipeline input :   True (ByValue)  Accept wildcard characters :   False",
            "title": "-Color"
        },
        {
            "location": "/Private/Convert-ColorToHexTriplet/#commonparameters",
            "text": "This cmdlet supports the common parameters: -Debug, -ErrorAction, -ErrorVariable, -InformationAction, -InformationVariable, -OutVariable, -OutBuffer, -PipelineVariable, -Verbose, -WarningAction, and -WarningVariable.\nFor more information, see about_CommonParameters ( http://go.microsoft.com/fwlink/?LinkID=113216 ).",
            "title": "CommonParameters"
        },
        {
            "location": "/Private/Convert-ColorToHexTriplet/#inputs",
            "text": "",
            "title": "INPUTS"
        },
        {
            "location": "/Private/Convert-ColorToHexTriplet/#systemdrawingcolor",
            "text": "",
            "title": "System.Drawing.Color"
        },
        {
            "location": "/Private/Convert-ColorToHexTriplet/#outputs",
            "text": "",
            "title": "OUTPUTS"
        },
        {
            "location": "/Private/Convert-ColorToHexTriplet/#systemstring",
            "text": "",
            "title": "System.String"
        },
        {
            "location": "/Private/Convert-ColorToHexTriplet/#notes",
            "text": "Troy Lindsay  Twitter: @troylindsay42  GitHub: tlindsay42",
            "title": "NOTES"
        },
        {
            "location": "/Private/Convert-ColorToHexTriplet/#related-links",
            "text": "https://tlindsay42.github.io/PSRyver/Private/Convert-ColorToHexTriplet/  https://github.com/PSRyver/blob/master/PSRyver/Private/Convert-ColorToHexTriplet.ps1  https://en.wikipedia.org/wiki/Web_colors#Hex_triplet",
            "title": "RELATED LINKS"
        },
        {
            "location": "/Private/ConvertFrom-UnixTime/",
            "text": "ConvertFrom-UnixTime\n\u00b6\n\n\nSYNOPSIS\n\u00b6\n\n\nConvert UNIX time to datetime objects.\n\n\nSYNTAX\n\u00b6\n\n\nConvertFrom-UnixTime [-UnixTime] <Int32> [<CommonParameters>]\n\n\n\n\nDESCRIPTION\n\u00b6\n\n\nConvert UNIX time to System.DateTime objects.\n\n\nEXAMPLES\n\u00b6\n\n\nEXAMPLE 1\n\u00b6\n\n\nConvertFrom-UnixTime -UnixTime 1532186850\n\n\n\n\nReturns 'Saturday, July 21, 2018 15:27:30'.\n\n\nEXAMPLE 2\n\u00b6\n\n\n1532186850 | ConvertFrom-UnixTime\n\n\n\n\nProcesses the pipeline value and returns\n'Saturday, July 21, 2018 15:27:30'.\n\n\nEXAMPLE 3\n\u00b6\n\n\nConvertFrom-UnixTime 1532186850\n\n\n\n\nUses positional parameter and returns\n'Saturday, July 21, 2018 15:27:30'.\n\n\nPARAMETERS\n\u00b6\n\n\n-UnixTime\n\u00b6\n\n\nThe UNIX formatted date & time.\n\n\nType\n:\n \nInt32\n\n\nParameter Sets\n:\n \n(All)\n\n\nAliases\n:\n\n\n\nRequired\n:\n \nTrue\n\n\nPosition\n:\n \n1\n\n\nDefault value\n:\n \n0\n\n\nAccept pipeline input\n:\n \nTrue (ByValue)\n\n\nAccept wildcard characters\n:\n \nFalse\n\n\n\n\n\nCommonParameters\n\u00b6\n\n\nThis cmdlet supports the common parameters: -Debug, -ErrorAction, -ErrorVariable, -InformationAction, -InformationVariable, -OutVariable, -OutBuffer, -PipelineVariable, -Verbose, -WarningAction, and -WarningVariable.\nFor more information, see about_CommonParameters (\nhttp://go.microsoft.com/fwlink/?LinkID=113216\n).\n\n\nINPUTS\n\u00b6\n\n\nSystem.Int32\n\u00b6\n\n\nOUTPUTS\n\u00b6\n\n\nSystem.DateTime\n\u00b6\n\n\nNOTES\n\u00b6\n\n\n\n\nTroy Lindsay\n\n\nTwitter: @troylindsay42\n\n\nGitHub: tlindsay42\n\n\n\n\nRELATED LINKS\n\u00b6\n\n\nhttps://tlindsay42.github.io/PSRyver/Private/ConvertFrom-UnixTime/\n\n\nhttps://github.com/PSRyver/blob/master/PSRyver/Private/ConvertFrom-UnixTime.ps1\n\n\nhttp://powershell.com/cs/blogs/tips/archive/2012/03/09/converting-unix-time.aspx",
            "title": "ConvertFrom-UnixTime"
        },
        {
            "location": "/Private/ConvertFrom-UnixTime/#convertfrom-unixtime",
            "text": "",
            "title": "ConvertFrom-UnixTime"
        },
        {
            "location": "/Private/ConvertFrom-UnixTime/#synopsis",
            "text": "Convert UNIX time to datetime objects.",
            "title": "SYNOPSIS"
        },
        {
            "location": "/Private/ConvertFrom-UnixTime/#syntax",
            "text": "ConvertFrom-UnixTime [-UnixTime] <Int32> [<CommonParameters>]",
            "title": "SYNTAX"
        },
        {
            "location": "/Private/ConvertFrom-UnixTime/#description",
            "text": "Convert UNIX time to System.DateTime objects.",
            "title": "DESCRIPTION"
        },
        {
            "location": "/Private/ConvertFrom-UnixTime/#examples",
            "text": "",
            "title": "EXAMPLES"
        },
        {
            "location": "/Private/ConvertFrom-UnixTime/#example-1",
            "text": "ConvertFrom-UnixTime -UnixTime 1532186850  Returns 'Saturday, July 21, 2018 15:27:30'.",
            "title": "EXAMPLE 1"
        },
        {
            "location": "/Private/ConvertFrom-UnixTime/#example-2",
            "text": "1532186850 | ConvertFrom-UnixTime  Processes the pipeline value and returns\n'Saturday, July 21, 2018 15:27:30'.",
            "title": "EXAMPLE 2"
        },
        {
            "location": "/Private/ConvertFrom-UnixTime/#example-3",
            "text": "ConvertFrom-UnixTime 1532186850  Uses positional parameter and returns\n'Saturday, July 21, 2018 15:27:30'.",
            "title": "EXAMPLE 3"
        },
        {
            "location": "/Private/ConvertFrom-UnixTime/#parameters",
            "text": "",
            "title": "PARAMETERS"
        },
        {
            "location": "/Private/ConvertFrom-UnixTime/#-unixtime",
            "text": "The UNIX formatted date & time.  Type :   Int32  Parameter Sets :   (All)  Aliases :  Required :   True  Position :   1  Default value :   0  Accept pipeline input :   True (ByValue)  Accept wildcard characters :   False",
            "title": "-UnixTime"
        },
        {
            "location": "/Private/ConvertFrom-UnixTime/#commonparameters",
            "text": "This cmdlet supports the common parameters: -Debug, -ErrorAction, -ErrorVariable, -InformationAction, -InformationVariable, -OutVariable, -OutBuffer, -PipelineVariable, -Verbose, -WarningAction, and -WarningVariable.\nFor more information, see about_CommonParameters ( http://go.microsoft.com/fwlink/?LinkID=113216 ).",
            "title": "CommonParameters"
        },
        {
            "location": "/Private/ConvertFrom-UnixTime/#inputs",
            "text": "",
            "title": "INPUTS"
        },
        {
            "location": "/Private/ConvertFrom-UnixTime/#systemint32",
            "text": "",
            "title": "System.Int32"
        },
        {
            "location": "/Private/ConvertFrom-UnixTime/#outputs",
            "text": "",
            "title": "OUTPUTS"
        },
        {
            "location": "/Private/ConvertFrom-UnixTime/#systemdatetime",
            "text": "",
            "title": "System.DateTime"
        },
        {
            "location": "/Private/ConvertFrom-UnixTime/#notes",
            "text": "Troy Lindsay  Twitter: @troylindsay42  GitHub: tlindsay42",
            "title": "NOTES"
        },
        {
            "location": "/Private/ConvertFrom-UnixTime/#related-links",
            "text": "https://tlindsay42.github.io/PSRyver/Private/ConvertFrom-UnixTime/  https://github.com/PSRyver/blob/master/PSRyver/Private/ConvertFrom-UnixTime.ps1  http://powershell.com/cs/blogs/tips/archive/2012/03/09/converting-unix-time.aspx",
            "title": "RELATED LINKS"
        },
        {
            "location": "/Private/ConvertTo-Authorization/",
            "text": "ConvertTo-Authorization\n\u00b6\n\n\nSYNOPSIS\n\u00b6\n\n\nConvert credential objects to basic authorization headers.\n\n\nSYNTAX\n\u00b6\n\n\nConvertTo-Authorization [-Credential] <PSCredential> [<CommonParameters>]\n\n\n\n\nDESCRIPTION\n\u00b6\n\n\nConvert credential objects to basic authorization headers.\n\n\nEXAMPLES\n\u00b6\n\n\nEXAMPLE 1\n\u00b6\n\n\nConvertTo-Authorization -Credential ( Get-Credential )\n\n\n\n\nConverts the credential to a base64 encoded basic authentication authorization\nheader value.\n\n\nEXAMPLE 2\n\u00b6\n\n\n( Get-Credential ) | ConvertTo-Authorization\n\n\n\n\nConverts the credential set via the pipeline to a base64 encoded basic\nauthentication authorization header value.\n\n\nEXAMPLE 3\n\u00b6\n\n\nConvertTo-Authorization ( Get-Credential )\n\n\n\n\nConverts the credential set via positional parameter to a base64 encoded basic\nauthentication authorization header value.\n\n\nPARAMETERS\n\u00b6\n\n\n-Credential\n\u00b6\n\n\nSpecifies the credential to convert to a base64 encoded basic authentication\nauthorization header value.\n\n\nType\n:\n \nPSCredential\n\n\nParameter Sets\n:\n \n(All)\n\n\nAliases\n:\n\n\n\nRequired\n:\n \nTrue\n\n\nPosition\n:\n \n1\n\n\nDefault value\n:\n \nNone\n\n\nAccept pipeline input\n:\n \nTrue (ByValue)\n\n\nAccept wildcard characters\n:\n \nFalse\n\n\n\n\n\nCommonParameters\n\u00b6\n\n\nThis cmdlet supports the common parameters: -Debug, -ErrorAction, -ErrorVariable, -InformationAction, -InformationVariable, -OutVariable, -OutBuffer, -PipelineVariable, -Verbose, -WarningAction, and -WarningVariable.\nFor more information, see about_CommonParameters (\nhttp://go.microsoft.com/fwlink/?LinkID=113216\n).\n\n\nINPUTS\n\u00b6\n\n\nSystem.Management.Automation.PSCredential\n\u00b6\n\n\nOUTPUTS\n\u00b6\n\n\nSystem.String\n\u00b6\n\n\nNOTES\n\u00b6\n\n\n\n\nTroy Lindsay\n\n\nTwitter: @troylindsay42\n\n\nGitHub: tlindsay42\n\n\n\n\nRELATED LINKS\n\u00b6\n\n\nhttps://tlindsay42.github.io/PSRyver/Private/ConvertTo-Authorization/\n\n\nhttps://github.com/PSRyver/blob/master/PSRyver/Private/ConvertTo-Authorization.ps1",
            "title": "ConvertTo-Authorization"
        },
        {
            "location": "/Private/ConvertTo-Authorization/#convertto-authorization",
            "text": "",
            "title": "ConvertTo-Authorization"
        },
        {
            "location": "/Private/ConvertTo-Authorization/#synopsis",
            "text": "Convert credential objects to basic authorization headers.",
            "title": "SYNOPSIS"
        },
        {
            "location": "/Private/ConvertTo-Authorization/#syntax",
            "text": "ConvertTo-Authorization [-Credential] <PSCredential> [<CommonParameters>]",
            "title": "SYNTAX"
        },
        {
            "location": "/Private/ConvertTo-Authorization/#description",
            "text": "Convert credential objects to basic authorization headers.",
            "title": "DESCRIPTION"
        },
        {
            "location": "/Private/ConvertTo-Authorization/#examples",
            "text": "",
            "title": "EXAMPLES"
        },
        {
            "location": "/Private/ConvertTo-Authorization/#example-1",
            "text": "ConvertTo-Authorization -Credential ( Get-Credential )  Converts the credential to a base64 encoded basic authentication authorization\nheader value.",
            "title": "EXAMPLE 1"
        },
        {
            "location": "/Private/ConvertTo-Authorization/#example-2",
            "text": "( Get-Credential ) | ConvertTo-Authorization  Converts the credential set via the pipeline to a base64 encoded basic\nauthentication authorization header value.",
            "title": "EXAMPLE 2"
        },
        {
            "location": "/Private/ConvertTo-Authorization/#example-3",
            "text": "ConvertTo-Authorization ( Get-Credential )  Converts the credential set via positional parameter to a base64 encoded basic\nauthentication authorization header value.",
            "title": "EXAMPLE 3"
        },
        {
            "location": "/Private/ConvertTo-Authorization/#parameters",
            "text": "",
            "title": "PARAMETERS"
        },
        {
            "location": "/Private/ConvertTo-Authorization/#-credential",
            "text": "Specifies the credential to convert to a base64 encoded basic authentication\nauthorization header value.  Type :   PSCredential  Parameter Sets :   (All)  Aliases :  Required :   True  Position :   1  Default value :   None  Accept pipeline input :   True (ByValue)  Accept wildcard characters :   False",
            "title": "-Credential"
        },
        {
            "location": "/Private/ConvertTo-Authorization/#commonparameters",
            "text": "This cmdlet supports the common parameters: -Debug, -ErrorAction, -ErrorVariable, -InformationAction, -InformationVariable, -OutVariable, -OutBuffer, -PipelineVariable, -Verbose, -WarningAction, and -WarningVariable.\nFor more information, see about_CommonParameters ( http://go.microsoft.com/fwlink/?LinkID=113216 ).",
            "title": "CommonParameters"
        },
        {
            "location": "/Private/ConvertTo-Authorization/#inputs",
            "text": "",
            "title": "INPUTS"
        },
        {
            "location": "/Private/ConvertTo-Authorization/#systemmanagementautomationpscredential",
            "text": "",
            "title": "System.Management.Automation.PSCredential"
        },
        {
            "location": "/Private/ConvertTo-Authorization/#outputs",
            "text": "",
            "title": "OUTPUTS"
        },
        {
            "location": "/Private/ConvertTo-Authorization/#systemstring",
            "text": "",
            "title": "System.String"
        },
        {
            "location": "/Private/ConvertTo-Authorization/#notes",
            "text": "Troy Lindsay  Twitter: @troylindsay42  GitHub: tlindsay42",
            "title": "NOTES"
        },
        {
            "location": "/Private/ConvertTo-Authorization/#related-links",
            "text": "https://tlindsay42.github.io/PSRyver/Private/ConvertTo-Authorization/  https://github.com/PSRyver/blob/master/PSRyver/Private/ConvertTo-Authorization.ps1",
            "title": "RELATED LINKS"
        },
        {
            "location": "/Private/ConvertTo-UnixTime/",
            "text": "ConvertTo-UnixTime\n\u00b6\n\n\nSYNOPSIS\n\u00b6\n\n\nConvert datetime objects to UNIX time.\n\n\nSYNTAX\n\u00b6\n\n\nConvertTo-UnixTime [-Date] <DateTime> [<CommonParameters>]\n\n\n\n\nDESCRIPTION\n\u00b6\n\n\nConvert System.DateTime objects to UNIX time.\n\n\nEXAMPLES\n\u00b6\n\n\nEXAMPLE 1\n\u00b6\n\n\nConvertTo-UnixTime -Date ( Get-Date -Date '2018-07-21 10:33:18' )\n\n\n\n\nReturns '1532187198'.\n\n\nEXAMPLE 2\n\u00b6\n\n\n( Get-Date -Date '2018-07-21 10:33:18' ) | ConvertTo-UnixTime\n\n\n\n\nProcesses the pipeline value and returns '1532187198'.\n\n\nEXAMPLE 3\n\u00b6\n\n\nConvertTo-UnixTime ( Get-Date -Date '2018-07-21 10:33:18' )\n\n\n\n\nUses positional parameter and returns '1532187198'.\n\n\nPARAMETERS\n\u00b6\n\n\n-Date\n\u00b6\n\n\nThe System.DateTime formatted date & time.\n\n\nType\n:\n \nDateTime\n\n\nParameter Sets\n:\n \n(All)\n\n\nAliases\n:\n\n\n\nRequired\n:\n \nTrue\n\n\nPosition\n:\n \n1\n\n\nDefault value\n:\n \nNone\n\n\nAccept pipeline input\n:\n \nTrue (ByValue)\n\n\nAccept wildcard characters\n:\n \nFalse\n\n\n\n\n\nCommonParameters\n\u00b6\n\n\nThis cmdlet supports the common parameters: -Debug, -ErrorAction, -ErrorVariable, -InformationAction, -InformationVariable, -OutVariable, -OutBuffer, -PipelineVariable, -Verbose, -WarningAction, and -WarningVariable.\nFor more information, see about_CommonParameters (\nhttp://go.microsoft.com/fwlink/?LinkID=113216\n).\n\n\nINPUTS\n\u00b6\n\n\nSystem.DateTime\n\u00b6\n\n\nOUTPUTS\n\u00b6\n\n\nSystem.Int32\n\u00b6\n\n\nNOTES\n\u00b6\n\n\n\n\nTroy Lindsay\n\n\nTwitter: @troylindsay42\n\n\nGitHub: tlindsay42\n\n\n\n\nRELATED LINKS\n\u00b6\n\n\nhttps://tlindsay42.github.io/PSRyver/Private/ConvertTo-UnixTime/\n\n\nhttps://github.com/PSRyver/blob/master/PSRyver/Private/ConvertTo-UnixTime.ps1",
            "title": "ConvertTo-UnixTime"
        },
        {
            "location": "/Private/ConvertTo-UnixTime/#convertto-unixtime",
            "text": "",
            "title": "ConvertTo-UnixTime"
        },
        {
            "location": "/Private/ConvertTo-UnixTime/#synopsis",
            "text": "Convert datetime objects to UNIX time.",
            "title": "SYNOPSIS"
        },
        {
            "location": "/Private/ConvertTo-UnixTime/#syntax",
            "text": "ConvertTo-UnixTime [-Date] <DateTime> [<CommonParameters>]",
            "title": "SYNTAX"
        },
        {
            "location": "/Private/ConvertTo-UnixTime/#description",
            "text": "Convert System.DateTime objects to UNIX time.",
            "title": "DESCRIPTION"
        },
        {
            "location": "/Private/ConvertTo-UnixTime/#examples",
            "text": "",
            "title": "EXAMPLES"
        },
        {
            "location": "/Private/ConvertTo-UnixTime/#example-1",
            "text": "ConvertTo-UnixTime -Date ( Get-Date -Date '2018-07-21 10:33:18' )  Returns '1532187198'.",
            "title": "EXAMPLE 1"
        },
        {
            "location": "/Private/ConvertTo-UnixTime/#example-2",
            "text": "( Get-Date -Date '2018-07-21 10:33:18' ) | ConvertTo-UnixTime  Processes the pipeline value and returns '1532187198'.",
            "title": "EXAMPLE 2"
        },
        {
            "location": "/Private/ConvertTo-UnixTime/#example-3",
            "text": "ConvertTo-UnixTime ( Get-Date -Date '2018-07-21 10:33:18' )  Uses positional parameter and returns '1532187198'.",
            "title": "EXAMPLE 3"
        },
        {
            "location": "/Private/ConvertTo-UnixTime/#parameters",
            "text": "",
            "title": "PARAMETERS"
        },
        {
            "location": "/Private/ConvertTo-UnixTime/#-date",
            "text": "The System.DateTime formatted date & time.  Type :   DateTime  Parameter Sets :   (All)  Aliases :  Required :   True  Position :   1  Default value :   None  Accept pipeline input :   True (ByValue)  Accept wildcard characters :   False",
            "title": "-Date"
        },
        {
            "location": "/Private/ConvertTo-UnixTime/#commonparameters",
            "text": "This cmdlet supports the common parameters: -Debug, -ErrorAction, -ErrorVariable, -InformationAction, -InformationVariable, -OutVariable, -OutBuffer, -PipelineVariable, -Verbose, -WarningAction, and -WarningVariable.\nFor more information, see about_CommonParameters ( http://go.microsoft.com/fwlink/?LinkID=113216 ).",
            "title": "CommonParameters"
        },
        {
            "location": "/Private/ConvertTo-UnixTime/#inputs",
            "text": "",
            "title": "INPUTS"
        },
        {
            "location": "/Private/ConvertTo-UnixTime/#systemdatetime",
            "text": "",
            "title": "System.DateTime"
        },
        {
            "location": "/Private/ConvertTo-UnixTime/#outputs",
            "text": "",
            "title": "OUTPUTS"
        },
        {
            "location": "/Private/ConvertTo-UnixTime/#systemint32",
            "text": "",
            "title": "System.Int32"
        },
        {
            "location": "/Private/ConvertTo-UnixTime/#notes",
            "text": "Troy Lindsay  Twitter: @troylindsay42  GitHub: tlindsay42",
            "title": "NOTES"
        },
        {
            "location": "/Private/ConvertTo-UnixTime/#related-links",
            "text": "https://tlindsay42.github.io/PSRyver/Private/ConvertTo-UnixTime/  https://github.com/PSRyver/blob/master/PSRyver/Private/ConvertTo-UnixTime.ps1",
            "title": "RELATED LINKS"
        },
        {
            "location": "/Private/Remove-SensitiveData/",
            "text": "Remove-SensitiveData\n\u00b6\n\n\nSYNOPSIS\n\u00b6\n\n\nRedact sensitive property values.\n\n\nSYNTAX\n\u00b6\n\n\nRemove-SensitiveData [-InputObject] <Object[]> [[-SensitiveProperties] <String[]>] [-ForceVerbose]\n [<CommonParameters>]\n\n\n\n\nDESCRIPTION\n\u00b6\n\n\nRedact sensitive property values prior to printing to the console.\n\n\nEXAMPLES\n\u00b6\n\n\nEXAMPLE 1\n\u00b6\n\n\nRemove-SensitiveData -InputObject [PSCustomObject] @{ IncomingWebhookUri = $incomingWebhookUri }\n\n\n\n\nReturns the input object with the value of the IncomingWebhookUri key set to\n'[REDACTED]', unless the $Script:PSRyver.ForceVerbose PSRyver module\nconfiguration parameter is set to $true, in which case the value would not be\nmasked.\n\n\nEXAMPLE 2\n\u00b6\n\n\n[PSCustomObject] @{ PlainText = 'do not display' } | Remove-SensitiveData -SensitiveProperties 'PlainText'\n\n\n\n\nReturns the object input via the pipeline with the value of the 'PlainText' key\nset to '[REDACTED]', because the SensitiveProperties parameter specified this\nkey as sensitive.\n\n\nEXAMPLE 3\n\u00b6\n\n\nRemove-SensitiveData -InputObject [PSCustomObject] @{ Authorization = $authorization } -ForceVerbose\n\n\n\n\nReturns the input object with the value of the Authorization key intact\nregardless of whether or not the $Script:PSRyver.ForceVerbose PSRyver module\nconfiguration parameter is set to $true, because the ForceVerbose parameter\nmandated this.\n\n\nEXAMPLE 4\n\u00b6\n\n\nRemove-SensitiveData [PSCustomObject] @{ Authorization = $authorization }\n\n\n\n\nUses a positional parameter Returns the hashtable with the Uri value set to '[REDACTED]'.\n\n\nPARAMETERS\n\u00b6\n\n\n-ForceVerbose\n\u00b6\n\n\nPrevents sensitive property values from being redacted for troubleshooting\npurposes.\n\n\n*** WARNING ***\nThis will expose your sensitive property values.\n\n\nType\n:\n \nSwitchParameter\n\n\nParameter Sets\n:\n \n(All)\n\n\nAliases\n:\n\n\n\nRequired\n:\n \nFalse\n\n\nPosition\n:\n \n3\n\n\nDefault value\n:\n \nFalse\n\n\nAccept pipeline input\n:\n \nFalse\n\n\nAccept wildcard characters\n:\n \nFalse\n\n\n\n\n\n-InputObject\n\u00b6\n\n\nSpecifies the objects to evaluate for sensitive property keys.\n\n\nType\n:\n \nObject[]\n\n\nParameter Sets\n:\n \n(All)\n\n\nAliases\n:\n\n\n\nRequired\n:\n \nTrue\n\n\nPosition\n:\n \n1\n\n\nDefault value\n:\n \nNone\n\n\nAccept pipeline input\n:\n \nTrue (ByValue)\n\n\nAccept wildcard characters\n:\n \nFalse\n\n\n\n\n\n-SensitiveProperties\n\u00b6\n\n\nSpecifies the properties that should be redacted.\n\n\nType\n:\n \nString[]\n\n\nParameter Sets\n:\n \n(All)\n\n\nAliases\n:\n\n\n\nRequired\n:\n \nFalse\n\n\nPosition\n:\n \n2\n\n\nDefault value\n:\n \n@\n(\n\n            \n'Credential',\n\n            \n'Authorization',\n\n            \n'IncomingWebhookUri',\n\n            \n'Token'\n\n        \n)\n\n\nAccept pipeline input\n:\n \nFalse\n\n\nAccept wildcard characters\n:\n \nFalse\n\n\n\n\n\nCommonParameters\n\u00b6\n\n\nThis cmdlet supports the common parameters: -Debug, -ErrorAction, -ErrorVariable, -InformationAction, -InformationVariable, -OutVariable, -OutBuffer, -PipelineVariable, -Verbose, -WarningAction, and -WarningVariable.\nFor more information, see about_CommonParameters (\nhttp://go.microsoft.com/fwlink/?LinkID=113216\n).\n\n\nINPUTS\n\u00b6\n\n\nSystem.Object[]\n\u00b6\n\n\nSystem.Object\n\u00b6\n\n\nOUTPUTS\n\u00b6\n\n\nSystem.Object[]\n\u00b6\n\n\nSystem.Object\n\u00b6\n\n\nNOTES\n\u00b6\n\n\n\n\nTroy Lindsay\n\n\nTwitter: @troylindsay42\n\n\nGitHub: tlindsay42\n\n\n\n\nRELATED LINKS\n\u00b6\n\n\nhttps://tlindsay42.github.io/PSRyver/Private/Remove-SensitiveData/\n\n\nhttps://github.com/PSRyver/blob/master/PSRyver/Private/Remove-SensitiveData.ps1",
            "title": "Remove-SensitiveData"
        },
        {
            "location": "/Private/Remove-SensitiveData/#remove-sensitivedata",
            "text": "",
            "title": "Remove-SensitiveData"
        },
        {
            "location": "/Private/Remove-SensitiveData/#synopsis",
            "text": "Redact sensitive property values.",
            "title": "SYNOPSIS"
        },
        {
            "location": "/Private/Remove-SensitiveData/#syntax",
            "text": "Remove-SensitiveData [-InputObject] <Object[]> [[-SensitiveProperties] <String[]>] [-ForceVerbose]\n [<CommonParameters>]",
            "title": "SYNTAX"
        },
        {
            "location": "/Private/Remove-SensitiveData/#description",
            "text": "Redact sensitive property values prior to printing to the console.",
            "title": "DESCRIPTION"
        },
        {
            "location": "/Private/Remove-SensitiveData/#examples",
            "text": "",
            "title": "EXAMPLES"
        },
        {
            "location": "/Private/Remove-SensitiveData/#example-1",
            "text": "Remove-SensitiveData -InputObject [PSCustomObject] @{ IncomingWebhookUri = $incomingWebhookUri }  Returns the input object with the value of the IncomingWebhookUri key set to\n'[REDACTED]', unless the $Script:PSRyver.ForceVerbose PSRyver module\nconfiguration parameter is set to $true, in which case the value would not be\nmasked.",
            "title": "EXAMPLE 1"
        },
        {
            "location": "/Private/Remove-SensitiveData/#example-2",
            "text": "[PSCustomObject] @{ PlainText = 'do not display' } | Remove-SensitiveData -SensitiveProperties 'PlainText'  Returns the object input via the pipeline with the value of the 'PlainText' key\nset to '[REDACTED]', because the SensitiveProperties parameter specified this\nkey as sensitive.",
            "title": "EXAMPLE 2"
        },
        {
            "location": "/Private/Remove-SensitiveData/#example-3",
            "text": "Remove-SensitiveData -InputObject [PSCustomObject] @{ Authorization = $authorization } -ForceVerbose  Returns the input object with the value of the Authorization key intact\nregardless of whether or not the $Script:PSRyver.ForceVerbose PSRyver module\nconfiguration parameter is set to $true, because the ForceVerbose parameter\nmandated this.",
            "title": "EXAMPLE 3"
        },
        {
            "location": "/Private/Remove-SensitiveData/#example-4",
            "text": "Remove-SensitiveData [PSCustomObject] @{ Authorization = $authorization }  Uses a positional parameter Returns the hashtable with the Uri value set to '[REDACTED]'.",
            "title": "EXAMPLE 4"
        },
        {
            "location": "/Private/Remove-SensitiveData/#parameters",
            "text": "",
            "title": "PARAMETERS"
        },
        {
            "location": "/Private/Remove-SensitiveData/#-forceverbose",
            "text": "Prevents sensitive property values from being redacted for troubleshooting\npurposes.  *** WARNING ***\nThis will expose your sensitive property values.  Type :   SwitchParameter  Parameter Sets :   (All)  Aliases :  Required :   False  Position :   3  Default value :   False  Accept pipeline input :   False  Accept wildcard characters :   False",
            "title": "-ForceVerbose"
        },
        {
            "location": "/Private/Remove-SensitiveData/#-inputobject",
            "text": "Specifies the objects to evaluate for sensitive property keys.  Type :   Object[]  Parameter Sets :   (All)  Aliases :  Required :   True  Position :   1  Default value :   None  Accept pipeline input :   True (ByValue)  Accept wildcard characters :   False",
            "title": "-InputObject"
        },
        {
            "location": "/Private/Remove-SensitiveData/#-sensitiveproperties",
            "text": "Specifies the properties that should be redacted.  Type :   String[]  Parameter Sets :   (All)  Aliases :  Required :   False  Position :   2  Default value :   @ ( \n             'Credential', \n             'Authorization', \n             'IncomingWebhookUri', \n             'Token' \n         )  Accept pipeline input :   False  Accept wildcard characters :   False",
            "title": "-SensitiveProperties"
        },
        {
            "location": "/Private/Remove-SensitiveData/#commonparameters",
            "text": "This cmdlet supports the common parameters: -Debug, -ErrorAction, -ErrorVariable, -InformationAction, -InformationVariable, -OutVariable, -OutBuffer, -PipelineVariable, -Verbose, -WarningAction, and -WarningVariable.\nFor more information, see about_CommonParameters ( http://go.microsoft.com/fwlink/?LinkID=113216 ).",
            "title": "CommonParameters"
        },
        {
            "location": "/Private/Remove-SensitiveData/#inputs",
            "text": "",
            "title": "INPUTS"
        },
        {
            "location": "/Private/Remove-SensitiveData/#systemobject",
            "text": "",
            "title": "System.Object[]"
        },
        {
            "location": "/Private/Remove-SensitiveData/#systemobject_1",
            "text": "",
            "title": "System.Object"
        },
        {
            "location": "/Private/Remove-SensitiveData/#outputs",
            "text": "",
            "title": "OUTPUTS"
        },
        {
            "location": "/Private/Remove-SensitiveData/#systemobject_2",
            "text": "",
            "title": "System.Object[]"
        },
        {
            "location": "/Private/Remove-SensitiveData/#systemobject_3",
            "text": "",
            "title": "System.Object"
        },
        {
            "location": "/Private/Remove-SensitiveData/#notes",
            "text": "Troy Lindsay  Twitter: @troylindsay42  GitHub: tlindsay42",
            "title": "NOTES"
        },
        {
            "location": "/Private/Remove-SensitiveData/#related-links",
            "text": "https://tlindsay42.github.io/PSRyver/Private/Remove-SensitiveData/  https://github.com/PSRyver/blob/master/PSRyver/Private/Remove-SensitiveData.ps1",
            "title": "RELATED LINKS"
        },
        {
            "location": "/Private/Test-IsWindows/",
            "text": "Test-IsWindows\n\u00b6\n\n\nSYNOPSIS\n\u00b6\n\n\nIs this running on a Windows system?\n\n\nSYNTAX\n\u00b6\n\n\nTest-IsWindows [<CommonParameters>]\n\n\n\n\nDESCRIPTION\n\u00b6\n\n\nIs this running on a Windows system?\n\n\nEXAMPLES\n\u00b6\n\n\nEXAMPLE 1\n\u00b6\n\n\nTest-IsWindows\n\n\n\n\nReturns $true if called from a Windows system and $false if not.\n\n\nPARAMETERS\n\u00b6\n\n\nCommonParameters\n\u00b6\n\n\nThis cmdlet supports the common parameters: -Debug, -ErrorAction, -ErrorVariable, -InformationAction, -InformationVariable, -OutVariable, -OutBuffer, -PipelineVariable, -Verbose, -WarningAction, and -WarningVariable.\nFor more information, see about_CommonParameters (\nhttp://go.microsoft.com/fwlink/?LinkID=113216\n).\n\n\nINPUTS\n\u00b6\n\n\nNone\n\u00b6\n\n\nYou cannot pipe input to this cmdlet.\n\n\n\n\n\nOUTPUTS\n\u00b6\n\n\nSystem.Boolean\n\u00b6\n\n\nNOTES\n\u00b6\n\n\n\n\nTroy Lindsay\n\n\nTwitter: @troylindsay42\n\n\nGitHub: tlindsay42\n\n\n\n\nRELATED LINKS\n\u00b6\n\n\nhttps://tlindsay42.github.io/PSRyver/Private/Test-IsWindows/\n\n\nhttps://github.com/PSRyver/blob/master/PSRyver/Private/Test-IsWindows.ps1",
            "title": "Test-IsWindows"
        },
        {
            "location": "/Private/Test-IsWindows/#test-iswindows",
            "text": "",
            "title": "Test-IsWindows"
        },
        {
            "location": "/Private/Test-IsWindows/#synopsis",
            "text": "Is this running on a Windows system?",
            "title": "SYNOPSIS"
        },
        {
            "location": "/Private/Test-IsWindows/#syntax",
            "text": "Test-IsWindows [<CommonParameters>]",
            "title": "SYNTAX"
        },
        {
            "location": "/Private/Test-IsWindows/#description",
            "text": "Is this running on a Windows system?",
            "title": "DESCRIPTION"
        },
        {
            "location": "/Private/Test-IsWindows/#examples",
            "text": "",
            "title": "EXAMPLES"
        },
        {
            "location": "/Private/Test-IsWindows/#example-1",
            "text": "Test-IsWindows  Returns $true if called from a Windows system and $false if not.",
            "title": "EXAMPLE 1"
        },
        {
            "location": "/Private/Test-IsWindows/#parameters",
            "text": "",
            "title": "PARAMETERS"
        },
        {
            "location": "/Private/Test-IsWindows/#commonparameters",
            "text": "This cmdlet supports the common parameters: -Debug, -ErrorAction, -ErrorVariable, -InformationAction, -InformationVariable, -OutVariable, -OutBuffer, -PipelineVariable, -Verbose, -WarningAction, and -WarningVariable.\nFor more information, see about_CommonParameters ( http://go.microsoft.com/fwlink/?LinkID=113216 ).",
            "title": "CommonParameters"
        },
        {
            "location": "/Private/Test-IsWindows/#inputs",
            "text": "",
            "title": "INPUTS"
        },
        {
            "location": "/Private/Test-IsWindows/#none",
            "text": "You cannot pipe input to this cmdlet.",
            "title": "None"
        },
        {
            "location": "/Private/Test-IsWindows/#outputs",
            "text": "",
            "title": "OUTPUTS"
        },
        {
            "location": "/Private/Test-IsWindows/#systemboolean",
            "text": "",
            "title": "System.Boolean"
        },
        {
            "location": "/Private/Test-IsWindows/#notes",
            "text": "Troy Lindsay  Twitter: @troylindsay42  GitHub: tlindsay42",
            "title": "NOTES"
        },
        {
            "location": "/Private/Test-IsWindows/#related-links",
            "text": "https://tlindsay42.github.io/PSRyver/Private/Test-IsWindows/  https://github.com/PSRyver/blob/master/PSRyver/Private/Test-IsWindows.ps1",
            "title": "RELATED LINKS"
        }
    ]
}